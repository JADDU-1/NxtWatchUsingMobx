{"version":3,"sources":["i18n/index.tsx","constants/CommonConstants.ts","context/index.tsx","constants/RouteConstants.ts","common/components/NXTWatchLogo/styledComponents.ts","common/components/NXTWatchLogo/NXTWatchLogo.tsx","common/components/HeaderNavbar/styledComponents.ts","utils/StorageUtils.ts","common/components/HeaderNavbar/HeaderNavbar.tsx","common/components/EachSideBarOption/styledComponents.ts","common/components/EachSideBarOption/EachSideBarOption.tsx","common/components/SideNavBar/stylesComponents.ts","common/components/SideNavBar/index.tsx","common/components/NavBarsWrapper/styledComponents.ts","common/components/NavBarsWrapper/NavBarsWrapper.tsx","common/components/TrendingAndSavedVideosHeader/styledComponents.ts","common/components/TrendingAndSavedVideosHeader/TrendingAndSavedVideosHeader.tsx","common/components/InputField/stylesComponents.ts","common/components/InputField/InputField.tsx","routes/HomePageRouter/styledComponents.ts","routes/GamingRoute/styledComponents.ts","components/HomePageVideoCard/stylesComponents.ts","components/GamePageCard/styledComponents.ts","components/GamePageCard/GamePageCard.tsx","common/components/Loader/styledComponents.ts","common/components/Loader/Loader.tsx","common/components/FailureView/styledComponents.ts","common/components/FailureView/FailureView.tsx","routes/GamingRoute/GamingRoute.tsx","components/HomePageVideoCard/HomePageVideoCard.tsx","components/HomePageVideoCardsList/styledComponents.ts","components/HomePageVideoCardsList/HomePageVideoCardsList.tsx","components/NoSearchResults/stylesComponents.ts","components/NoSearchResults/NoSearchResults.tsx","components/PremiumPlanCard/styledComponents.ts","components/PremiumPlanCard/PremiumPlanCard.tsx","routes/HomePageRouter/HomePageRouter.tsx","components/LoginForm/stylesComponents.ts","components/LoginForm/index.tsx","routes/LoginPageRouter/styledComponents.ts","routes/LoginPageRouter/LoginPageRouter.tsx","common/components/TrendingAndSavedVideosCard/styledComplements.ts","common/components/TrendingAndSavedVideosCard/TrendingAndSavedVideosCard.tsx","components/VideoCardsList/styledComponents.ts","components/VideoCardsList/VideoCardsList.tsx","routes/SavedVideosRoute/styledComponents.ts","components/NoSavedVideos/stylesComponents.ts","components/NoSavedVideos/NosavedVideos.tsx","routes/SavedVideosRoute/SavedVideosRoute.tsx","routes/TrendingVideosRoute/styledComponents.ts","routes/TrendingVideosRoute/TrendingVideosRoute.tsx","components/VideoDetailsPage/styledComponents.ts","components/VideoDetailsPage/VideoDetailsPage.tsx","routes/VideoItemDetailsRoute/VideoItemDetailsRoute.tsx","common/routes/ProtectedRoute/index.tsx","common/routes/CommonRoute.tsx","services/AuthenticServices/index.ts","stores/AuthenticationStore/AuthenticationStore.ts","constants/APIConstants.ts","services/HomePageServices/index.ts","stores/models/HomePageModel/index.ts","stores/HomePageStore/HomePageStore.ts","services/VideoDetailsServices/VideoDetailsServices.ts","stores/models/VideoDetailsModel/VideoDetailsModel.ts","stores/VideoItemDetailsStore/VideoItemDetailsStore.ts","stores/TrendingVideosStore/TrendingVideosStore.ts","services/TrendingVideosService/TrendingVideosService.ts","stores/GameVideosStore/GameVideosStore.ts","services/GamingVideosService/GamingVideosService.ts","stores/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["i18n","use","Backend","initReactI18next","init","fallbackLng","backend","loadPath","process","react","useSuspense","loadNamespaces","err","console","log","LightTheme","DarkTheme","TrendingVideosPage","GamingPage","CommonContext","React","createContext","selectedTheme","onChangeTheme","savedVideosList","onAddVideo","videoDetails","onRemoveVideo","LOGIN_IN_PATH","HOME_PAGE_PATH","TRENDING_VIDEOS_PAGE","GAMING_PAGE_PATH","SAVED_VIDEOS_PAGE","VIDEO_DETAILS","NxtLogoContainer","styled","div","NxtLogo","img","NxtWatchLogo","props","className","shouldShowNxtDarkIcon","alt","src","HeaderNavBarWrapper","NxtWatchNavLogo","ThemeAndLogOutContainer","ThemeButton","button","DarkThemeIcon","BsMoonFill","LightThemeIcon","BsBrightnessHigh","ProfileIcon","HamburgerMenuButton","HamburgerMenuIcon","GiHamburgerMenu","theme","LogoutButton","LogoutIcon","FiLogOut","PopUpContainer","PopUpDescription","p","ButtonsContainer","CancelButton","ConfirmButton","ACCESS_TOKEN","getAccessToken","key","Cookie","get","setAccessToken","accessToken","value","set","expires","path","clearUserSession","remove","HeaderNavbar","observer","onClickLogout","history","replace","onChangePopUpStatus","shouldShowLogoutPopUp","renderPopUpUi","onClick","this","t","onChangeMenuStatus","Consumer","minWidth","type","maxWidth","Component","observable","withTranslation","withRouter","EachOption","li","color","Option","Link","HomeIcon","AiFillHome","TrendingIcon","HiFire","GamingIcon","SiYoutubegaming","SavedVideosIcon","RiPlayListAddFill","OptionText","span","EachSideBarOption","eachOptionDetails","selectedPage","id","optionText","isSelectedOption","to","getPagePath","getIcon","SideNavBarContainer","shouldShowMenuPopUp","OptionsContainer","ul","ContactUsSectionContainer","SocialMediaIcon","ContactUsTitle","h3","EnjoyRecommendationsText","SocialMediaLink","a","pathname","location","sideBarOptionsList","map","eachOption","href","target","CommonWrapper","SideBarAndComponentContainer","NavBarsWrapper","component","HeaderWrapper","LogoContainer","Title","CommonBanner","logoComponent","titleText","InputContainer","LabelTag","label","InputTag","input","ErrorMessage","InputFieldWithLabel","fieldType","onChangeFunction","errorMessage","placeHolderText","labelText","enteredValue","shouldShowErrorMessage","shouldShowLabel","htmlFor","onChange","event","placeholder","HomePageWrapper","SearchBarAndCardsContainer","SearInputAndIconContainer","SearchIconContainer","SearchIcon","IoIosSearch","SearchField","GamingLogo","VideosList","CardWrapper","LinkEle","ImageContainer","VideoImage","VideoDetailsContainer","ChannelLogo","DetailsContainer","VideoTitle","ChannelName","ViewsAndPublishSection","Views","DotElement","PublishedTime","Card","ImgContainer","Image","eachVideoDetails","title","thumbnailUrl","viewsCount","LoaderContainer","LoaderComponent","height","width","FailureViewWrapper","FailureImage","FailureViewTitle","FailureViewDescription","RetryButton","onClickRetry","GamingRoute","inject","getInjectedProps","getGamePageStore","gameVideosStore","doNetworkCalls","getGamePageData","renderUiBasedOnApiStatus","getGamePageAPIStatus","getGamePageVideosList","API_SUCCESS","API_FAILED","API_FETCHING","Loader","renderUI","HomePageVideoCard","channel","publishedAt","published","formatDistanceToNow","Date","profileImageUrl","name","HomePageVideoCardsList","homePageVideosList","NoResultsImage","PremiumPlanCardContainer","NXTLogoAndCloseButtonContainer","NXTLogo","CloseIcon","IoMdClose","BuyNxtWatchText","GetButton","onChangeBannerCardStatus","shouldShowBannerCard","HomePageRouter","getHomePageStore","homePageStore","getHomePageData","searchedString","getSearchedData","onChangeSearchInput","getHomePageAPIStatus","getHomePageVideosList","length","renderHomeUI","LoginFormContainer","Form","form","ShowShowPasswordContainer","ShouldShowPasswordLabel","Checkbox","LoginButton","LoginError","usernameError","username","password","passwordError","shouldShowPasswordStatus","shouldShowPassword","onChangeUserName","onChangePassword","onSubmitCredentials","getUserLogInAPIError","getUserLogInAPIStatus","onSubmit","preventDefault","InputField","LoginScreenContainer","LoginPageRoute","getAuthStore","authenticStore","getUserLogIn","ThumbnailContainer","Thumbnail","TrendingAndSavedVideosCard","VideosListWrapper","VideoCardsList","videosList","SavedVideosLogo","NoSavedVideosImage","SavedVideosRoute","renderTheSavedVideosUI","TrendingVideosLogo","TrendingVideosRoute","getTrendingPageStore","trendingVideosStore","getTrendingPageData","getTrendingPageAPIStatus","getTrendingPageVideosList","VideoContainer","ViewsAndLikesDislikesContainer","ViewAndPublishedTimeContainer","LikesAndDislikesContainer","LikeButton","isLiked","DislikeButton","isDisliked","SavedVideoButton","isSaved","HorizontalLine","hr","Subscribers","Description","ChannelNameAndDescriptionContainer","ChannelAndDescriptionContainer","ChannelTitle","VideoDetailsPage","videoUrl","description","onChangeLikedStatus","onChangeDislikedStatus","isSavedVideo","some","eachVideo","url","controls","size","subscribersCount","VideoItemDetailsRoute","getVideoDetailsStore","videoItemDetailsStore","match","params","getVideoDetailsPageData","getVideoDetailsAPIStatus","getVideoDetails","ProtectedRoute","others","CommonRoute","exact","AuthenticService","api","LogInAPI","userDetails","options","method","body","JSON","stringify","fetch","response","json","data","loginResponse","details","status","ok","create","baseURL","AuthenticStore","action","bound","authService","authAPIService","jwt_token","apiStatus","error","AuthPromise","bindPromiseWithOnSuccess","setGetUserLogInAPIStatus","setUserLogInAPIResponse","catch","setGetUserLogInAPIError","apiMethods","HomePageServices","search","JwtToken","headers","Authorization","fetchedData","HomePageEachVideoModel","object","thumbnail_url","profile_image_url","view_count","published_at","HomePageStore","homePageService","homePageApiService","API_INITIAL","totalVideoCount","total","videos","getHomePageAPIError","searchString","setGetHomePageAPIStatus","setHomePageAPIResponse","setHomePageAPIError","VideoDetailsServices","getSelectedVideoDetails","VideoDetailsModel","video_details","video_url","subscriber_count","VideoItemDetailsStore","videoDetailsService","videoDetailsApiService","getVideoDetailsAPIError","setVideoDetailsAPIStatus","setVideoDetailsAPIResponse","setVideoDetailsAPIError","TrendingVideosStore","trendingPageService","trendingPageApiService","getTrendingPageAPIError","setTrendingPageAPIStatus","setTrendingPageAPIResponse","setTrendingPageAPIError","TrendingVideosService","GameVideosStore","gamePageApiService","getGamePageAPIError","setGamePageAPIStatus","setGamePageAPIResponse","setGamePageAPIError","GamingVideosService","authenticService","App","videoObjects","filter","eachVideoItem","stores","Provider","I18nextProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.12903ad6.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport Backend from \"i18next-xhr-backend\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst fallbackLng = [\"en\"];\n\ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  .init({\n    fallbackLng,\n    backend: {\n      loadPath: `${process.env.PUBLIC_URL}/i18n/translations/{{lng}}.json`,\n    },\n    react: {\n      useSuspense: true,\n    },\n  });\ni18n.loadNamespaces([\"common\"], (err) => {\n  if (err) {\n    console.log(err);\n  }\n});\n\nexport default i18n;\n","export const LightTheme = \"LIGHT\";\nexport const DarkTheme = \"DARK\";\nexport const HomePage = \"HOME\";\nexport const TrendingVideosPage = \"TRENDING\";\nexport const GamingPage = \"GAMING\";\nexport const SavedVideosPage = \"SAVED VIDEOS\";\n","import React from \"react\";\nimport { LightTheme } from \"../constants/CommonConstants\";\nimport VideoDetailsModel from \"../stores/models/VideoDetailsModel/VideoDetailsModel\";\n\nconst CommonContext = React.createContext({\n  selectedTheme: LightTheme,\n  onChangeTheme: () => {},\n  savedVideosList: [],\n  onAddVideo: (videoDetails: VideoDetailsModel) => {},\n  onRemoveVideo: (videoDetails: VideoDetailsModel) => {},\n});\n\nexport default CommonContext;\n","export const LOGIN_IN_PATH = \"/login\";\nexport const HOME_PAGE_PATH = \"/\";\nexport const TRENDING_VIDEOS_PAGE = \"/trending-videos\";\nexport const GAMING_PAGE_PATH = \"/gaming\";\nexport const SAVED_VIDEOS_PAGE = \"/saved-videos\";\nexport const VIDEO_DETAILS = \"/videos/\";\nexport const VideoDetailsId = \"/id\";\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\n\nexport const NxtLogoContainer = styled.div`\n  ${tw`text-center mb-8 flex items-center justify-center`}\n`;\n\nexport const NxtLogo = styled.img`\n  ${tw``}\n  height:38px;\n  @media (max-width: 768px) {\n    height: 27px;\n  }\n`;\n","import React from \"react\";\nimport { DarkTheme } from \"../../../constants/CommonConstants\";\nimport { NxtLogo, NxtLogoContainer } from \"./styledComponents\";\n\ninterface NxtWatchLogoPropTypes {\n  className?: string;\n  shouldShowNxtDarkIcon?: string;\n}\n\nconst NxtWatchLogo = (props: NxtWatchLogoPropTypes) => {\n  const { className, shouldShowNxtDarkIcon } = props;\n\n  return (\n    <NxtLogoContainer className={className}>\n      {shouldShowNxtDarkIcon === DarkTheme ? (\n        <NxtLogo\n          alt=\"Nxt Dark Logo\"\n          src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-logo-dark-theme-img.png\"\n        />\n      ) : (\n        <NxtLogo\n          alt=\"Nxt Light Logo\"\n          src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-logo-light-theme-img.png\"\n        />\n      )}\n    </NxtLogoContainer>\n  );\n};\n\nexport default NxtWatchLogo;\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport NxtWatchLogo from \"../NXTWatchLogo/NXTWatchLogo\";\nimport { BsBrightnessHigh, BsMoonFill } from \"react-icons/bs\";\nimport { LightTheme } from \"../../../constants/CommonConstants\";\nimport { FiLogOut } from \"react-icons/fi\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\n\nexport const HeaderNavBarWrapper = styled.div`\n  ${tw` flex flex-row justify-between px-10`}\n  @media (max-width: 768px) {\n    ${tw`px-4 `}\n  }\n`;\n\nexport const NxtWatchNavLogo = styled(NxtWatchLogo)`\n  ${tw`text-left mb-0`}\n`;\n\nexport const ThemeAndLogOutContainer = styled.div`\n  ${tw`flex flex-row items-center`}\n  height:70px;\n`;\n\nexport const ThemeButton = styled.button`\n  ${tw`border-none bg-transparent`}\n`;\n\nexport const DarkThemeIcon = styled(BsMoonFill)`\n  ${tw``}\n  height:30px;\n  width: 30px;\n  @media (max-width: 768px) {\n    height: 25px;\n    width: 25px;\n  }\n`;\n\nexport const LightThemeIcon = styled(BsBrightnessHigh)`\n  ${tw``}\n  height:30px;\n  width: 30px;\n  color: white;\n  @media (max-width: 768px) {\n    height: 25px;\n    width: 25px;\n  }\n`;\n\nexport const ProfileIcon = styled.img`\n  ${tw`mr-10 m-10`}\n  height:30px;\n  width: 30px;\n`;\n\nexport const HamburgerMenuButton = styled.button`\n  ${tw`border-none mx-2 bg-transparent`}\n`;\n\nexport const HamburgerMenuIcon = styled(GiHamburgerMenu)`\n  ${tw``}\n  height:25px;\n  width: 25px;\n  color: ${(props) => (props.theme === LightTheme ? \"#212121\" : \"#ffffff\")};\n`;\n\nexport const LogoutButton = styled.button`\n  ${tw`bg-transparent py-1 px-2 rounded-sm font-semibold outline-none cursor-pointer`}\n  font-family: \"Roboto\";\n  border-color: ${(props) =>\n    props.theme === LightTheme ? \"#3b82f6\" : \"#ffffff\"};\n  color: ${(props) => (props.theme === LightTheme ? \"#3b82f6\" : \"#ffffff\")};\n  @media (max-width: 768px) {\n    ${tw`border-none`}\n    color: ${(props) => (props.theme === LightTheme ? \"#212121\" : \"#ffffff\")};\n  }\n`;\n\nexport const LogoutIcon = styled(FiLogOut)`\n  ${tw``}\n  height:25px;\n  width: 25px;\n`;\n\nexport const PopUpContainer = styled.div`\n  ${tw`absolute m-auto rounded inset-0 p-4 text-center flex flex-col justify-center shadow-lg`}\n  background-color: ${(props) =>\n    props.theme === LightTheme ? \"#ffffff\" : \"#212121\"};\n  max-width: 300px;\n  height: 150px;\n`;\n\nexport const PopUpDescription = styled.p`\n  ${tw`mb-10`}\n  font-family: \"Roboto\";\n  font-size: 14px;\n  color: ${(props) => props.theme !== LightTheme && \"#ffffff\"};\n`;\n\nexport const ButtonsContainer = styled.div`\n  ${tw`text-center`}\n`;\n\nexport const CancelButton = styled(LogoutButton)`\n  ${tw`mr-6 py-1 rounded px-4`}\n`;\n\nexport const ConfirmButton = styled(LogoutButton)`\n  ${tw`border-none rounded py-2 px-4`}\n\n  background-color: #3b82f6;\n`;\n","import Cookie from \"js-cookie\";\n\nexport const ACCESS_TOKEN = \"dG6EABne5a\";\n\nexport function getCookie(key: string): string | undefined {\n  return Cookie.get(key);\n}\n\nfunction setCookie(key: string, value: string): void {\n  Cookie.set(key, value, {\n    expires: 30,\n    path: \"/\",\n  });\n}\n\nexport function getAccessToken(): string | undefined {\n  return getCookie(ACCESS_TOKEN);\n}\nexport function setAccessToken(accessToken: string) {\n  setCookie(ACCESS_TOKEN, accessToken);\n}\n\nexport function clearUserSession(): void {\n  Cookie.remove(ACCESS_TOKEN, { path: \"/\" });\n}\n","import React, { Component } from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { LOGIN_IN_PATH } from \"../../../constants/RouteConstants\";\nimport CommonContext from \"../../../context\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport MediaQuery from \"react-responsive\";\nimport {\n  ButtonsContainer,\n  CancelButton,\n  ConfirmButton,\n  DarkThemeIcon,\n  HamburgerMenuButton,\n  HamburgerMenuIcon,\n  HeaderNavBarWrapper,\n  LightThemeIcon,\n  LogoutButton,\n  LogoutIcon,\n  NxtWatchNavLogo,\n  PopUpContainer,\n  PopUpDescription,\n  ProfileIcon,\n  ThemeAndLogOutContainer,\n  ThemeButton,\n} from \"./styledComponents\";\nimport { LightTheme } from \"../../../constants/CommonConstants\";\nimport { clearUserSession } from \"../../../utils/StorageUtils\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { FiLogOut } from \"react-icons/fi\";\n\ninterface HeaderNavbarProps extends RouteComponentProps {}\ninterface HeaderNavbarProps extends WithTranslation {}\n\ninterface HeaderNavbarProps {\n  onChangeMenuStatus: () => void;\n}\n\n@observer\nclass HeaderNavbar extends Component<HeaderNavbarProps> {\n  @observable shouldShowLogoutPopUp: boolean = false;\n\n  onClickLogout = () => {\n    const { history } = this.props;\n    clearUserSession();\n    history.replace(LOGIN_IN_PATH);\n  };\n\n  onChangePopUpStatus = () => {\n    this.shouldShowLogoutPopUp = !this.shouldShowLogoutPopUp;\n  };\n\n  renderPopUpUi = (selectedTheme: string, shouldShowLogoutPopUp: boolean) => (\n    <>\n      {shouldShowLogoutPopUp && (\n        <PopUpContainer theme={selectedTheme}>\n          <PopUpDescription theme={selectedTheme}>\n            Are you sure, you want to logout?\n          </PopUpDescription>\n          <ButtonsContainer>\n            <CancelButton\n              onClick={this.onChangePopUpStatus}\n              theme={selectedTheme}\n            >\n              Cancel\n            </CancelButton>\n            <ConfirmButton onClick={this.onClickLogout}>Confirm</ConfirmButton>\n          </ButtonsContainer>\n        </PopUpContainer>\n      )}\n    </>\n  );\n\n  render() {\n    const { t, onChangeMenuStatus } = this.props;\n    const { shouldShowLogoutPopUp } = this;\n    return (\n      <CommonContext.Consumer>\n        {(value) => {\n          const { onChangeTheme, selectedTheme } = value;\n\n          return (\n            <HeaderNavBarWrapper>\n              <MediaQuery minWidth={769}>\n                <NxtWatchNavLogo shouldShowNxtDarkIcon={selectedTheme} />\n                <ThemeAndLogOutContainer>\n                  <ThemeButton onClick={onChangeTheme}>\n                    {selectedTheme === LightTheme ? (\n                      <DarkThemeIcon />\n                    ) : (\n                      <LightThemeIcon />\n                    )}\n                  </ThemeButton>\n                  <ProfileIcon\n                    src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-profile-img.png\"\n                    alt={t(\"navbar.profileIconAltText\")}\n                  />\n                  <LogoutButton\n                    type=\"button\"\n                    onClick={this.onChangePopUpStatus}\n                    theme={selectedTheme}\n                  >\n                    {t(\"navbar.logout\")}\n                  </LogoutButton>\n                </ThemeAndLogOutContainer>\n              </MediaQuery>\n              <MediaQuery maxWidth={768}>\n                <NxtWatchNavLogo shouldShowNxtDarkIcon={selectedTheme} />\n                <ThemeAndLogOutContainer>\n                  <ThemeButton onClick={onChangeTheme}>\n                    {selectedTheme === LightTheme ? (\n                      <DarkThemeIcon />\n                    ) : (\n                      <LightThemeIcon />\n                    )}\n                  </ThemeButton>\n                  <HamburgerMenuButton onClick={onChangeMenuStatus}>\n                    <HamburgerMenuIcon theme={selectedTheme} />\n                  </HamburgerMenuButton>\n                  <LogoutButton\n                    type=\"button\"\n                    onClick={this.onChangePopUpStatus}\n                    theme={selectedTheme}\n                  >\n                    <LogoutIcon />\n                  </LogoutButton>\n                </ThemeAndLogOutContainer>\n              </MediaQuery>\n\n              {this.renderPopUpUi(selectedTheme, shouldShowLogoutPopUp)}\n            </HeaderNavBarWrapper>\n          );\n        }}\n      </CommonContext.Consumer>\n    );\n  }\n}\n\nexport default withTranslation(\"translation\")(withRouter(HeaderNavbar));\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { LightTheme } from \"../../../constants/CommonConstants\";\nimport { AiFillHome } from \"react-icons/ai\";\nimport { RiPlayListAddFill } from \"react-icons/ri\";\nimport { HiFire } from \"react-icons/hi\";\nimport { SiYoutubegaming } from \"react-icons/si\";\n\nexport const EachOption = styled.li`\n  ${tw`flex items-center py-2  pl-4 `}\n  background-color: ${(props) => props.theme === true && \"#ffffff20\"};\n  background-color: ${(props) =>\n    props.color === LightTheme && props.theme === true && \"#f1f5f9\"};\n  font-weight: ${(props) => props.theme === true && \"bold\"};\n`;\n\nexport const Option = styled(Link)`\n  ${tw` no-underline `}\n`;\n\nexport const HomeIcon = styled(AiFillHome)`\n  ${tw`mr-6`}\n  color: ${(props) => (props.theme === LightTheme ? \" #383838\" : \"#909090\")};\n`;\n\nexport const TrendingIcon = styled(HiFire)`\n  ${tw`mr-6`}\n  color: ${(props) => (props.theme === LightTheme ? \" #383838\" : \"#909090\")};\n`;\n\nexport const GamingIcon = styled(SiYoutubegaming)`\n  ${tw`mr-6`}\n  color: ${(props) => (props.theme === LightTheme ? \" #383838\" : \"#909090\")};\n`;\n\nexport const SavedVideosIcon = styled(RiPlayListAddFill)`\n  ${tw`mr-6`}\n  color: ${(props) => (props.theme === LightTheme ? \" #383838\" : \"#909090\")};\n`;\n\nexport const OptionText = styled.span`\n  ${tw`text-base`}\n  font-family:Roboto;\n  color: ${(props) => (props.theme === LightTheme ? \"#000000\" : \"#ffffff\")};\n`;\n","import React from \"react\";\nimport {\n  GamingPage,\n  HomePage,\n  SavedVideosPage,\n  TrendingVideosPage,\n} from \"../../../constants/CommonConstants\";\nimport {\n  HOME_PAGE_PATH,\n  TRENDING_VIDEOS_PAGE,\n  GAMING_PAGE_PATH,\n  SAVED_VIDEOS_PAGE,\n} from \"../../../constants/RouteConstants\";\nimport {\n  Option,\n  HomeIcon,\n  TrendingIcon,\n  GamingIcon,\n  OptionText,\n  SavedVideosIcon,\n  EachOption,\n} from \"./styledComponents\";\n\ninterface OptionDetails {\n  id: string;\n  path: string;\n  optionText: string;\n}\n\ninterface EachSideBarOptionPropTypes {\n  selectedTheme: string;\n  eachOptionDetails: OptionDetails;\n  selectedPage: string;\n  onChangeMenuStatus: () => void;\n}\n\nconst EachSideBarOption = (props: EachSideBarOptionPropTypes) => {\n  const { eachOptionDetails, selectedTheme, selectedPage, onChangeMenuStatus } =\n    props;\n  const { id, path, optionText } = eachOptionDetails;\n\n  const getIcon = () => {\n    switch (id) {\n      case HomePage:\n        return <HomeIcon theme={selectedTheme} />;\n      case TrendingVideosPage:\n        return <TrendingIcon theme={selectedTheme} />;\n      case GamingPage:\n        return <GamingIcon theme={selectedTheme} />;\n      default:\n        return <SavedVideosIcon theme={selectedTheme} />;\n    }\n  };\n\n  const getPagePath = () => {\n    switch (id) {\n      case SavedVideosPage:\n        return SAVED_VIDEOS_PAGE;\n      case TrendingVideosPage:\n        return TRENDING_VIDEOS_PAGE;\n      case GamingPage:\n        return GAMING_PAGE_PATH;\n      default:\n        return HOME_PAGE_PATH;\n    }\n  };\n  const isSelectedOption = selectedPage === path ? true : false;\n\n  return (\n    <Option to={getPagePath()} onClick={onChangeMenuStatus}>\n      <EachOption theme={isSelectedOption} color={selectedTheme}>\n        {getIcon()}\n        <OptionText theme={selectedTheme}>{optionText}</OptionText>\n      </EachOption>\n    </Option>\n  );\n};\n\nexport default EachSideBarOption;\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { LightTheme } from \"../../../constants/CommonConstants\";\n\ninterface SideNavBarContainerProps {\n  shouldShowMenuPopUp: boolean;\n}\n\nexport const SideNavBarContainer = styled.div<SideNavBarContainerProps>`\n  ${tw`flex flex-col py-4 flex-grow`}\n  max-width:200px;\n  @media (max-width: 768px) {\n    ${tw`absolute w-full h-full`}\n    display: ${(props) => !props.shouldShowMenuPopUp && \"none\"};\n    background-color: ${(props) =>\n      props.theme === LightTheme ? \"#ffffff\" : \"#212121\"};\n  }\n`;\n\nexport const OptionsContainer = styled.ul`\n  ${tw`flex flex-col list-none flex-grow px-0`}\n`;\n\nexport const ContactUsSectionContainer = styled.div`\n  ${tw` pl-4`}\n`;\n\nexport const SocialMediaIcon = styled.img`\n  ${tw`mr-4`}\n  height:30px;\n`;\n\nexport const ContactUsTitle = styled.h3`\n  ${tw`text-base font-bold`}\n  color: ${(props) => (props.theme === LightTheme ? \"#000000\" : \"#ffffff\")};\n`;\n\nexport const EnjoyRecommendationsText = styled.p`\n  ${tw`text-sm font-bold`}\n  color: ${(props) => (props.theme === LightTheme ? \"#000000\" : \"#ffffff\")};\n`;\n\nexport const SocialMediaLink = styled.a``;\n","import React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport EachSideBarOption from \"../EachSideBarOption/EachSideBarOption\";\nimport sideBarOptionsList from \"./sideBarOptionList.json\";\nimport {\n  GAMING_PAGE_PATH,\n  HOME_PAGE_PATH,\n  SAVED_VIDEOS_PAGE,\n  TRENDING_VIDEOS_PAGE,\n} from \"../../../constants/RouteConstants\";\nimport {\n  SideNavBarContainer,\n  OptionsContainer,\n  ContactUsSectionContainer,\n  EnjoyRecommendationsText,\n  ContactUsTitle,\n  SocialMediaIcon,\n  SocialMediaLink,\n} from \"./stylesComponents\";\nimport CommonContext from \"../../../context\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\n\ninterface SideNavBarProps extends RouteComponentProps {}\n\ninterface SideNavBarProps extends WithTranslation {}\ninterface SideNavBarProps {\n  shouldShowMenuPopUp: boolean;\n  onChangeMenuStatus: () => void;\n}\n\nconst SideNavBar = (props: SideNavBarProps) => {\n  const { t } = props;\n  const { history, shouldShowMenuPopUp, onChangeMenuStatus } = props;\n\n  return (\n    <CommonContext.Consumer>\n      {(value) => {\n        const { selectedTheme } = value;\n\n        const { pathname } = history.location;\n        return (\n          <SideNavBarContainer\n            shouldShowMenuPopUp={shouldShowMenuPopUp}\n            theme={selectedTheme}\n          >\n            <OptionsContainer>\n              {sideBarOptionsList.map((eachOption) => (\n                <EachSideBarOption\n                  key={eachOption.id}\n                  selectedTheme={selectedTheme}\n                  selectedPage={pathname}\n                  eachOptionDetails={eachOption}\n                  onChangeMenuStatus={onChangeMenuStatus}\n                />\n              ))}\n            </OptionsContainer>\n            <ContactUsSectionContainer>\n              <ContactUsTitle theme={selectedTheme}>\n                {t(\"navbar.contactUs\")}\n              </ContactUsTitle>\n              <SocialMediaLink\n                href={\"https://www.facebook.com/\"}\n                target=\"_blank\"\n              >\n                <SocialMediaIcon\n                  alt=\"facebook\"\n                  src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-facebook-logo-img.png\"\n                />\n              </SocialMediaLink>\n              <SocialMediaLink\n                href={\"https://twitter.com/?lang=en\"}\n                target=\"_blank\"\n              >\n                <SocialMediaIcon\n                  alt=\"twitter\"\n                  src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-twitter-logo-img.png \"\n                />\n              </SocialMediaLink>\n              <SocialMediaLink\n                href={\"https://www.linkedin.com/signup\"}\n                target=\"_blank\"\n              >\n                <SocialMediaIcon\n                  alt=\"linkedIn\"\n                  src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-linked-in-logo-img.png\"\n                />\n              </SocialMediaLink>\n              <EnjoyRecommendationsText theme={selectedTheme}>\n                {t(\"navbar.enjoyRecommendationsText\")}\n              </EnjoyRecommendationsText>\n            </ContactUsSectionContainer>\n          </SideNavBarContainer>\n        );\n      }}\n    </CommonContext.Consumer>\n  );\n};\n\nexport default withTranslation(\"translation\")(withRouter(SideNavBar));\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { LightTheme } from \"../../../constants/CommonConstants\";\n\nexport const CommonWrapper = styled.div`\n  ${tw`h-screen flex flex-col relative`}\n\n  background-color: ${(props) =>\n    props.theme === LightTheme ? \"#ffffff\" : \"#212121\"};\n`;\n\nexport const SideBarAndComponentContainer = styled.div`\n  ${tw`flex flex-grow h-full  overflow-hidden`}\n`;\n","import { action, observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\nimport {\n  LightTheme,\n  DarkTheme,\n  HomePage,\n} from \"../../../constants/CommonConstants\";\nimport CommonContext from \"../../../context\";\nimport HeaderNavbar from \"../HeaderNavbar/HeaderNavbar\";\nimport SideNavBar from \"../SideNavBar\";\n\nimport {\n  CommonWrapper,\n  SideBarAndComponentContainer,\n} from \"./styledComponents\";\n\ninterface NavbarWrapperPropTypes {\n  component: React.ReactNode;\n}\n\n@observer\nclass NavBarsWrapper extends Component<NavbarWrapperPropTypes> {\n  @observable shouldShowMenuPopUp: boolean = false;\n\n  onChangeMenuStatus = () => {\n    this.shouldShowMenuPopUp = !this.shouldShowMenuPopUp;\n  };\n\n  render() {\n    const { component } = this.props;\n    const { shouldShowMenuPopUp, onChangeMenuStatus } = this;\n    return (\n      <CommonContext.Consumer>\n        {(value) => {\n          const { selectedTheme } = value;\n          return (\n            <CommonWrapper theme={selectedTheme}>\n              <HeaderNavbar onChangeMenuStatus={onChangeMenuStatus} />\n              <SideBarAndComponentContainer>\n                <SideNavBar\n                  shouldShowMenuPopUp={shouldShowMenuPopUp}\n                  onChangeMenuStatus={onChangeMenuStatus}\n                />\n                {component}\n              </SideBarAndComponentContainer>\n            </CommonWrapper>\n          );\n        }}\n      </CommonContext.Consumer>\n    );\n  }\n}\n\nexport default NavBarsWrapper;\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { LightTheme } from \"../../../constants/CommonConstants\";\n\nexport const HeaderWrapper = styled.div`\n  ${tw`flex items-center py-4 pl-10`}\n\n  background-color: ${(props) =>\n    props.theme === LightTheme ? \"#f1f1f1\" : \"#181818\"};\n`;\n\nexport const LogoContainer = styled.div`\n  ${tw`flex items-center mr-4 p-4`}\n  border-radius:40px;\n  background-color: ${(props) =>\n    props.theme === LightTheme ? \"#e2e8f0\" : \"#0f0f0f\"};\n`;\n\nexport const Title = styled.div`\n  ${tw`font-bold`}\n  font-family: 'Roboto';\n  font-size: 20px;\n  color: ${(props) => (props.theme === LightTheme ? \"#1e293b\" : \"#f8fafc\")};\n  @media (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n","import React from \"react\";\nimport { HeaderWrapper, LogoContainer, Title } from \"./styledComponents\";\n\ninterface CommonBannerPropTypes {\n  titleText: string;\n  logoComponent: React.ReactNode;\n  theme: string;\n}\n\nconst CommonBanner = (props: CommonBannerPropTypes) => {\n  const { logoComponent, titleText, theme } = props;\n  return (\n    <HeaderWrapper theme={theme}>\n      <LogoContainer theme={theme}>{logoComponent}</LogoContainer>\n      <Title theme={theme}>{titleText}</Title>\n    </HeaderWrapper>\n  );\n};\n\nexport default CommonBanner;\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\n\nexport const InputContainer = styled.div`\n  ${tw` flex flex-col  w-full `}\n  height: 78px;\n`;\n\nexport const LabelTag = styled.label`\n  ${tw` text-sm font-bold `}\n  color: #7e858e;\n`;\n\nexport const InputTag = styled.input`\n  ${tw`mb-1  rounded-sm`}\n  font-size:15px;\n  height: 29px;\n  border: 1px solid #cccccc;\n  color: #7e858e;\n`;\n\nexport const ErrorMessage = styled.p`\n  ${tw`font-bold m-0`}\n  font-size: 12px;\n  color: #cf1124;\n`;\n\nexport const InputFieldWithErrorMessage = styled.div`\n  width: 100%;\n`;\n","import { observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\nimport {\n  InputContainer,\n  LabelTag,\n  InputTag,\n  ErrorMessage,\n} from \"./stylesComponents\";\n\ninterface InputElementProps {\n  fieldType: string;\n  onChangeFunction: Function;\n  errorMessage?: string;\n  shouldShowErrorMessage?: boolean;\n  placeHolderText: string;\n  labelText?: string;\n  enteredValue?: string;\n  shouldShowLabel?: boolean;\n  className?: string;\n}\n\n@observer\nclass InputFieldWithLabel extends Component<InputElementProps> {\n  render() {\n    const {\n      fieldType,\n      onChangeFunction,\n      errorMessage,\n      placeHolderText,\n      labelText,\n      shouldShowErrorMessage,\n      enteredValue,\n      shouldShowLabel,\n      className,\n    } = this.props;\n\n    const onChangeSearchInput = (\n      event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n      onChangeFunction(event.target.value);\n    };\n\n    return (\n      <InputContainer className={className}>\n        {shouldShowLabel && (\n          <LabelTag htmlFor={labelText}>{labelText}</LabelTag>\n        )}\n        <InputTag\n          id={labelText}\n          type={fieldType}\n          onChange={onChangeSearchInput}\n          placeholder={placeHolderText}\n          value={enteredValue}\n        />\n        {errorMessage !== \"\" && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </InputContainer>\n    );\n  }\n}\nexport default InputFieldWithLabel;\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { IoIosSearch } from \"react-icons/io\";\nimport InputFieldWithLabel from \"../../common/components/InputField/InputField\";\nimport { LightTheme } from \"../../constants/CommonConstants\";\n\nexport const HomePageWrapper = styled.div`\n  ${tw`h-full w-full flex flex-col overflow-y-auto flex-grow`}\n\n  background-color: ${(props) =>\n    props.theme === LightTheme ? \"#f9f9f9\" : \"#0f0f0f\"}\n`;\n\nexport const SearchBarAndCardsContainer = styled.div`\n  ${tw`p-6 h-full`}\n  @media (max-width:767px) {\n    ${tw`p-2`}\n  }\n`;\n\nexport const SearInputAndIconContainer = styled.div`\n  ${tw`flex w-4/12 mb-6`}\n  @media (max-width:767px) {\n    ${tw`w-full`}\n  }\n`;\nexport const SearchIconContainer = styled.div`\n  ${tw`px-6 flex items-center`}\n  background-color: #f4f4f4;\n  border: 1px solid #cccccc;\n`;\nexport const SearchIcon = styled(IoIosSearch)`\n  ${tw``}\n`;\n\nexport const SearchField = styled(InputFieldWithLabel)`\n  ${tw``}\n  margin-bottom:-3px;\n  height: 100%;\n`;\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { SiYoutubegaming } from \"react-icons/si\";\n\nexport const GamingLogo = styled(SiYoutubegaming)`\n  ${tw``}\n  height:30px;\n  width: 30px;\n  color: #ff0000;\n`;\n\nexport const VideosList = styled.ul`\n  ${tw`list-none flex flex-wrap mt-8 h-full`}\n  @media (max-width: 767px) {\n    ${tw`w-full p-4`}\n  }\n`;\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { DarkTheme, LightTheme } from \"../../constants/CommonConstants\";\n\nexport const CardWrapper = styled.li`\n  ${tw`mb-6 w-full`}\n\n  @media (min-width: 768px) {\n    ${tw`mr-6 mb-6`}\n    max-width:280px;\n    width: 100%;\n  }\n`;\n\nexport const LinkEle = styled(Link)`\n  ${tw`no-underline`}\n  color: inherit;\n`;\n\nexport const ImageContainer = styled.div`\n  ${tw``}\n`;\n\nexport const VideoImage = styled.img`\n  ${tw`w-full`}\n`;\n\nexport const VideoDetailsContainer = styled.div`\n  ${tw`flex  pr-1 pt-1`}\n`;\n\nexport const ChannelLogo = styled.img`\n  ${tw`mr-2`}\n  height:40px;\n`;\n\nexport const DetailsContainer = styled.div`\n  ${tw``}\n`;\n\nexport const VideoTitle = styled.p`\n  ${tw`m-0`}\n  color: ${(props) => (props.theme === DarkTheme ? \"#f8fafc\" : \"#1e293b\")};\n  font-family: \"Roboto\";\n  font-size: 14px;\n  line-height: 1.7;\n`;\n\nexport const ChannelName = styled.p`\n  ${tw``}\n  color: ${(props) => (props.theme === DarkTheme ? \"#64748b\" : \"#475569\")};\n  font-family: \"Roboto\";\n  font-size: 12px;\n  line-height: 1.7;\n`;\n\nexport const ViewsAndPublishSection = styled.div`\n  ${tw`flex items-center`}\n`;\n\nexport const Views = styled.span`\n  ${tw``}\n  color: ${(props) => (props.theme === DarkTheme ? \"#64748B\" : \"#475569\")};\n  font-family: \"Roboto\";\n  font-size: 12px;\n  line-height: 1.7;\n`;\n\nexport const DotElement = styled.div`\n  ${tw``}\n  text-align: center;\n  align-self: center;\n  background-color: ${(props) =>\n    props.theme === DarkTheme ? \"#64748B\" : \"#475569\"};\n  height: 4px;\n  width: 4px;\n  border-radius: 50%;\n  margin-right: 8px;\n  margin-left: 8px;\n`;\n\nexport const PublishedTime = styled.span`\n  ${tw``}\n  color: ${(props) => (props.theme === DarkTheme ? \"#64748B\" : \"#475569\")};\n  font-family: \"Roboto\";\n  font-size: 12px;\n  line-height: 1.7;\n`;\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { ImageContainer } from \"../HomePageVideoCard/stylesComponents\";\n\nexport const Card = styled.li`\n  ${tw`mr-4 mb-8`}\n`;\nexport const ImgContainer = styled(ImageContainer)`\n  ${tw``}\n`;\n\nexport const Image = styled.img`\n  ${tw``}\n  height:265px;\n  @media (max-width: 767px) {\n    ${tw` `}\n    height:180px;\n  }\n`;\n","import React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { VIDEO_DETAILS } from \"../../constants/RouteConstants\";\nimport HomePageEachVideoModel from \"../../stores/models/HomePageModel\";\nimport {\n  LinkEle,\n  DetailsContainer,\n  VideoTitle,\n  Views,\n} from \"../HomePageVideoCard/stylesComponents\";\nimport { ImgContainer, Image, Card } from \"./styledComponents\";\n\ninterface GamePageCardProprTypes extends WithTranslation {\n  eachVideoDetails: HomePageEachVideoModel;\n  theme: string;\n}\n\nconst GamePageCard = (props: GamePageCardProprTypes) => {\n  const { t, eachVideoDetails, theme } = props;\n  const { id, title, thumbnailUrl, viewsCount } = eachVideoDetails;\n\n  return (\n    <Card>\n      <LinkEle to={`${VIDEO_DETAILS}${id}`}>\n        <ImgContainer>\n          <Image src={thumbnailUrl} />\n        </ImgContainer>\n        <DetailsContainer>\n          <VideoTitle theme={theme}>{title}</VideoTitle>\n          <Views theme={theme}>\n            {viewsCount} {t(\"gaming.watchingWorldWideText\")}\n          </Views>\n        </DetailsContainer>\n      </LinkEle>\n    </Card>\n  );\n};\n\nexport default withTranslation()(GamePageCard);\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\n\nexport const LoaderContainer = styled.div`\n  ${tw`h-full w-full flex items-center justify-center flex-grow`}\n`;\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport { LoaderContainer } from \"./styledComponents\";\n\nconst LoaderComponent = () => (\n  <LoaderContainer>\n    <Loader type=\"ThreeDots\" color=\"red\" height=\"50\" width=\"50\" />\n  </LoaderContainer>\n);\n\nexport default LoaderComponent;\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { LightTheme } from \"../../../constants/CommonConstants\";\n\nexport const FailureViewWrapper = styled.div`\n  ${tw`h-full w-full flex flex-col items-center justify-center flex-grow`}\n`;\n\nexport const FailureImage = styled.img`\n  ${tw``}\n  height: 270px;\n`;\n\nexport const FailureViewTitle = styled.h3`\n  ${tw`font-bold text-base m-0 mt-8`}\n  color: ${(props) => (props.theme === LightTheme ? \"#1e293b\" : \"#f8fafc\")};\n  font-family: \"Roboto\";\n`;\n\nexport const FailureViewDescription = styled.p`\n  ${tw`m-0 mt-4 mb-6 text-center`}\n  color: ${(props) => (props.theme === LightTheme ? \"#475569\" : \"#94a3b8\")};\n  font-family: \"Roboto\";\n  font-size: 16px;\n`;\n\nexport const RetryButton = styled.button`\n  ${tw`border-none font-bold rounded px-4 py-2 cursor-pointer`}\n  color: #ffffff;\n  background-color: #4f46e5;\n  font-family: \"Roboto\";\n  font-size: 12px;\n  outline: none;\n`;\n","import React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { LightTheme } from \"../../../constants/CommonConstants\";\nimport {\n  FailureViewWrapper,\n  FailureImage,\n  FailureViewDescription,\n  FailureViewTitle,\n  RetryButton,\n} from \"./styledComponents\";\n\ninterface FailureViewPropTypes extends WithTranslation {\n  onClickRetry: () => void;\n  theme?: string;\n}\n\nconst FailureView = (props: FailureViewPropTypes) => {\n  const { onClickRetry, theme, t } = props;\n\n  return (\n    <FailureViewWrapper>\n      {theme === LightTheme ? (\n        <FailureImage\n          alt={t(\"failureView.failureViewLightTheme\")}\n          src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-light-theme-img.png\"\n        />\n      ) : (\n        <FailureImage\n          alt={t(\"failureView.failureViewDarkTheme\")}\n          src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-dark-theme-img.png\"\n        />\n      )}\n      <FailureViewTitle theme={theme}>\n        {t(\"failureView.title\")}\n      </FailureViewTitle>\n      <FailureViewDescription theme={theme}>\n        {t(\"failureView.description\")}\n      </FailureViewDescription>\n      <RetryButton onClick={onClickRetry}>\n        {t(\"failureView.retryButtonText\")}\n      </RetryButton>\n    </FailureViewWrapper>\n  );\n};\n\nexport default withTranslation()(FailureView);\n","import React, { Component } from \"react\";\nimport { API_FAILED, API_FETCHING, API_SUCCESS } from \"@ib/api-constants\";\nimport { inject, observer } from \"mobx-react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport NavBarsWrapper from \"../../common/components/NavBarsWrapper/NavBarsWrapper\";\nimport CommonBanner from \"../../common/components/TrendingAndSavedVideosHeader/TrendingAndSavedVideosHeader\";\nimport CommonContext from \"../../context\";\nimport GameVideosStore from \"../../stores/GameVideosStore/GameVideosStore\";\nimport { HomePageWrapper } from \"../HomePageRouter/styledComponents\";\nimport { GamingLogo, VideosList } from \"./styledComponents\";\nimport GamePageCard from \"../../components/GamePageCard/GamePageCard\";\nimport LoaderComponent from \"../../common/components/Loader/Loader\";\nimport FailureView from \"../../common/components/FailureView/FailureView\";\nimport HomePageEachVideoModel from \"../../stores/models/HomePageModel\";\n\ninterface InjectedProps extends WithTranslation {\n  gameVideosStore: GameVideosStore;\n}\n@inject(\"gameVideosStore\")\n@observer\nclass GamingRoute extends Component<InjectedProps> {\n  getInjectedProps = (): InjectedProps => this.props as InjectedProps;\n\n  getGamePageStore = () => {\n    return this.getInjectedProps().gameVideosStore;\n  };\n\n  componentDidMount() {\n    this.doNetworkCalls();\n  }\n\n  doNetworkCalls = () => {\n    this.getGamePageStore().getGamePageData();\n  };\n\n  onClickRetry = () => {\n    this.doNetworkCalls();\n  };\n\n  renderUiBasedOnApiStatus = (\n    theme: string,\n    getGamePageAPIStatus: string | number,\n    getGamePageVideosList: Array<HomePageEachVideoModel>\n  ) => {\n    switch (getGamePageAPIStatus) {\n      case API_SUCCESS:\n        return (\n          <>\n            {getGamePageVideosList.map(\n              (eachVideoDetails: HomePageEachVideoModel) => (\n                <GamePageCard\n                  key={eachVideoDetails.id}\n                  eachVideoDetails={eachVideoDetails}\n                  theme={theme}\n                />\n              )\n            )}\n          </>\n        );\n      case API_FAILED:\n        return <FailureView onClickRetry={this.onClickRetry} theme={theme} />;\n      case API_FETCHING:\n        return <LoaderComponent />;\n      default:\n        return null;\n    }\n  };\n\n  renderUI = () => {\n    const { t } = this.props;\n    const { getGamePageAPIStatus, getGamePageVideosList } =\n      this.getGamePageStore();\n    return (\n      <CommonContext.Consumer>\n        {(value) => {\n          const { selectedTheme } = value;\n          return (\n            <HomePageWrapper theme={selectedTheme}>\n              <CommonBanner\n                logoComponent={<GamingLogo />}\n                theme={selectedTheme}\n                titleText={t(\"gaming.gamingTitle\")}\n              />\n              <VideosList>\n                {this.renderUiBasedOnApiStatus(\n                  selectedTheme,\n                  getGamePageAPIStatus,\n                  getGamePageVideosList\n                )}\n              </VideosList>\n            </HomePageWrapper>\n          );\n        }}\n      </CommonContext.Consumer>\n    );\n  };\n\n  render() {\n    return <NavBarsWrapper component={this.renderUI()} />;\n  }\n}\n\nexport default withTranslation()(GamingRoute);\n","import React from \"react\";\nimport HomePageEachVideoModel from \"../../stores/models/HomePageModel\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport {\n  CardWrapper,\n  ImageContainer,\n  VideoDetailsContainer,\n  ViewsAndPublishSection,\n  ChannelLogo,\n  DetailsContainer,\n  VideoTitle,\n  ChannelName,\n  Views,\n  PublishedTime,\n  VideoImage,\n  DotElement,\n  LinkEle,\n} from \"./stylesComponents\";\nimport { VIDEO_DETAILS } from \"../../constants/RouteConstants\";\n\ninterface HomePageVideoCardPropTypes {\n  eachVideoDetails: HomePageEachVideoModel;\n  theme: string;\n}\n\nconst HomePageVideoCard = (props: HomePageVideoCardPropTypes) => {\n  const { eachVideoDetails, theme } = props;\n  const { id, title, thumbnailUrl, channel, viewsCount, publishedAt } =\n    eachVideoDetails;\n\n  const published = publishedAt && formatDistanceToNow(new Date(publishedAt));\n\n  return (\n    <CardWrapper>\n      <LinkEle to={`${VIDEO_DETAILS}${id}`}>\n        <ImageContainer>\n          <VideoImage src={thumbnailUrl} />\n        </ImageContainer>\n        <VideoDetailsContainer>\n          <ChannelLogo src={channel.profileImageUrl} />\n          <DetailsContainer>\n            <VideoTitle theme={theme}>{title}</VideoTitle>\n            <ChannelName theme={theme}>{channel.name}</ChannelName>\n            <ViewsAndPublishSection>\n              <Views theme={theme}>{viewsCount} Views</Views>\n              <DotElement theme={theme}></DotElement>\n              <PublishedTime theme={theme}>{published}</PublishedTime>\n            </ViewsAndPublishSection>\n          </DetailsContainer>\n        </VideoDetailsContainer>\n      </LinkEle>\n    </CardWrapper>\n  );\n};\n\nexport default HomePageVideoCard;\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\n\nexport const VideosList = styled.ul`\n  ${tw`flex flex-wrap list-none p-0`}\n`;\n","import React from \"react\";\nimport HomePageEachVideoModel from \"../../stores/models/HomePageModel\";\nimport HomePageVideoCard from \"../HomePageVideoCard/HomePageVideoCard\";\nimport { VideosList } from \"./styledComponents\";\n\ninterface HomePageVideoCardsListPropsTypes {\n  homePageVideosList: Array<HomePageEachVideoModel>;\n  theme: string;\n}\n\nconst HomePageVideoCardsList = (props: HomePageVideoCardsListPropsTypes) => {\n  const { homePageVideosList, theme } = props;\n\n  return (\n    <VideosList>\n      {homePageVideosList?.map((eachVideoDetails: HomePageEachVideoModel) => (\n        <HomePageVideoCard\n          key={eachVideoDetails.id}\n          eachVideoDetails={eachVideoDetails}\n          theme={theme}\n        />\n      ))}\n    </VideosList>\n  );\n};\n\nexport default HomePageVideoCardsList;\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\n\nexport const NoResultsImage = styled.img`\n  ${tw``}\n  height: 300px;\n  @media (max-width: 768px) {\n    height: 175px;\n  }\n`;\n","import React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport {\n  FailureViewWrapper,\n  FailureViewTitle,\n  FailureViewDescription,\n  RetryButton,\n} from \"../../common/components/FailureView/styledComponents\";\nimport { NoResultsImage } from \"./stylesComponents\";\n\ninterface NoSearchResultsPropTypes extends WithTranslation {\n  onClickRetry: () => void;\n  theme: string;\n}\n\nconst NoSearchResults = (props: NoSearchResultsPropTypes) => {\n  const { onClickRetry, theme, t } = props;\n\n  return (\n    <FailureViewWrapper>\n      <NoResultsImage\n        alt={t(\"noSearchResults.imageAltText\")}\n        src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-no-search-results-img.png\"\n      />\n      <FailureViewTitle theme={theme}>\n        {t(\"noSearchResults.title\")}\n      </FailureViewTitle>\n      <FailureViewDescription theme={theme}>\n        {t(\"noSearchResults.description\")}\n      </FailureViewDescription>\n      <RetryButton onClick={onClickRetry}>\n        {t(\"noSearchResults.retryButtonText\")}\n      </RetryButton>\n    </FailureViewWrapper>\n  );\n};\n\nexport default withTranslation()(NoSearchResults);\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport NxtWatchLogo from \"../../common/components/NXTWatchLogo/NXTWatchLogo\";\nimport { IoMdClose } from \"react-icons/io\";\n\nexport const PremiumPlanCardContainer = styled.div`\n  ${tw`px-8 py-4 bg-cover`}\n  background-image: url('https://assets.ccbp.in/frontend/react-js/nxt-watch-banner-bg.png');\n\n  height: 20vh;\n`;\n\nexport const NXTLogoAndCloseButtonContainer = styled.div`\n  ${tw`flex justify-between`}\n`;\n\nexport const NXTLogo = styled(NxtWatchLogo)`\n  ${tw`mb-0`}\n`;\n\nexport const CloseIcon = styled(IoMdClose)`\n  ${tw``}\n`;\n\nexport const BuyNxtWatchText = styled.p`\n  ${tw``}\n  max-width: 200px;\n`;\n\nexport const GetButton = styled.button`\n  ${tw`px-4 py-2 mt-4 bg-transparent font-bold`}\n`;\n","import React from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport {\n  PremiumPlanCardContainer,\n  NXTLogoAndCloseButtonContainer,\n  NXTLogo,\n  CloseIcon,\n  BuyNxtWatchText,\n  GetButton,\n} from \"./styledComponents\";\n\ninterface PremiumPlanCardPropTypes extends WithTranslation {\n  onChangeBannerCardStatus: () => void;\n  shouldShowBannerCard: boolean;\n}\n\nconst PremiumPlanCard = (props: PremiumPlanCardPropTypes) => {\n  const { t, onChangeBannerCardStatus, shouldShowBannerCard } = props;\n\n  return (\n    <>\n      {shouldShowBannerCard && (\n        <PremiumPlanCardContainer>\n          <NXTLogoAndCloseButtonContainer>\n            <NXTLogo />\n            <CloseIcon onClick={onChangeBannerCardStatus} />\n          </NXTLogoAndCloseButtonContainer>\n          <BuyNxtWatchText>{t(\"homePage.buyPremiumPlansText\")}</BuyNxtWatchText>\n          <GetButton>{t(\"homePage.getItNowButtonText\")}</GetButton>\n        </PremiumPlanCardContainer>\n      )}\n    </>\n  );\n};\n\nexport default withTranslation()(PremiumPlanCard);\n","import { API_FAILED, API_FETCHING, API_SUCCESS } from \"@ib/api-constants\";\nimport { observable } from \"mobx\";\nimport { inject, observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport FailureView from \"../../common/components/FailureView/FailureView\";\nimport LoaderComponent from \"../../common/components/Loader/Loader\";\nimport NavBarsWrapper from \"../../common/components/NavBarsWrapper/NavBarsWrapper\";\nimport HomePageVideoCardsList from \"../../components/HomePageVideoCardsList/HomePageVideoCardsList\";\nimport NoSearchResults from \"../../components/NoSearchResults/NoSearchResults\";\nimport PremiumPlanCard from \"../../components/PremiumPlanCard/PremiumPlanCard\";\nimport CommonContext from \"../../context\";\nimport HomePageStore from \"../../stores/HomePageStore/HomePageStore\";\nimport HomePageEachVideoModel from \"../../stores/models/HomePageModel\";\nimport {\n  HomePageWrapper,\n  SearchBarAndCardsContainer,\n  SearchField,\n  SearchIcon,\n  SearchIconContainer,\n  SearInputAndIconContainer,\n} from \"./styledComponents\";\n\ninterface InjectedProps extends WithTranslation {\n  homePageStore: HomePageStore;\n}\n@inject(\"homePageStore\")\n@observer\nclass HomePageRouter extends Component<InjectedProps> {\n  @observable searchedString: string = \"\";\n\n  getInjectedProps = (): InjectedProps => this.props as InjectedProps;\n\n  getHomePageStore = () => {\n    return this.getInjectedProps().homePageStore;\n  };\n\n  componentDidMount() {\n    this.doNetworkCalls();\n  }\n\n  doNetworkCalls = () => {\n    this.getHomePageStore().getHomePageData(this.searchedString);\n  };\n\n  getSearchedData = () => {\n    this.doNetworkCalls();\n  };\n\n  onChangeSearchInput = (value: string) => {\n    this.searchedString = value;\n  };\n\n  onClickRetry = () => {\n    this.doNetworkCalls();\n  };\n\n  renderUiBasedOnApiStatus = (\n    theme: string,\n    getHomePageAPIStatus: string | number,\n    getHomePageVideosList: Array<HomePageEachVideoModel>\n  ) => {\n    switch (getHomePageAPIStatus) {\n      case API_SUCCESS:\n        return (\n          <>\n            {getHomePageVideosList.length === 0 ? (\n              <NoSearchResults onClickRetry={this.onClickRetry} theme={theme} />\n            ) : (\n              <HomePageVideoCardsList\n                theme={theme}\n                homePageVideosList={getHomePageVideosList}\n              />\n            )}\n          </>\n        );\n      case API_FAILED:\n        return <FailureView onClickRetry={this.onClickRetry} theme={theme} />;\n      case API_FETCHING:\n        return <LoaderComponent />;\n      default:\n        return null;\n    }\n  };\n\n  renderHomeUI = () => {\n    const { t } = this.props;\n    const {\n      onChangeBannerCardStatus,\n      shouldShowBannerCard,\n      getHomePageAPIStatus,\n      getHomePageVideosList,\n    } = this.getHomePageStore();\n    return (\n      <CommonContext.Consumer>\n        {(value) => {\n          const { selectedTheme } = value;\n          return (\n            <HomePageWrapper theme={selectedTheme}>\n              <PremiumPlanCard\n                onChangeBannerCardStatus={onChangeBannerCardStatus}\n                shouldShowBannerCard={shouldShowBannerCard}\n              />\n              <SearchBarAndCardsContainer>\n                <SearInputAndIconContainer>\n                  <SearchField\n                    fieldType={t(\"homePage.searchInputType\")}\n                    onChangeFunction={this.onChangeSearchInput}\n                    placeHolderText={t(\"homePage.searchInputPlaceHolderText\")}\n                  />\n                  <SearchIconContainer>\n                    <SearchIcon onClick={this.getSearchedData} />\n                  </SearchIconContainer>\n                </SearInputAndIconContainer>\n                {this.renderUiBasedOnApiStatus(\n                  selectedTheme,\n                  getHomePageAPIStatus,\n                  getHomePageVideosList\n                )}\n              </SearchBarAndCardsContainer>\n            </HomePageWrapper>\n          );\n        }}\n      </CommonContext.Consumer>\n    );\n  };\n\n  render() {\n    return <NavBarsWrapper component={this.renderHomeUI()} />;\n  }\n}\n\nexport default withTranslation()(HomePageRouter);\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\n\nexport const LoginFormContainer = styled.div`\n  ${tw`p-12  rounded-lg`}\n  box-shadow: 1px 3px 10px 10px #e2e8f0;\n  min-width: 300px;\n  @media (max-width: 768px) {\n    min-width: 0px;\n  }\n`;\n\nexport const NxtLogoContainer = styled.div`\n  ${tw`text-center mb-8`}\n`;\n\nexport const NxtLogo = styled.img`\n  ${tw``}\n  height:38px;\n`;\nexport const Form = styled.form`\n  ${tw``}\n`;\n\nexport const ShowShowPasswordContainer = styled.div`\n  ${tw``}\n`;\n\nexport const ShouldShowPasswordLabel = styled.label`\n  ${tw`text-sm`}\n`;\n\nexport const Checkbox = styled.input`\n  margin-left: 0px;\n  margin-right: 6px;\n`;\n\nexport const LoginButton = styled.button`\n  ${tw`rounded-lg border-none font-bold py-2 w-full mt-6 text-sm`}\n  color:#ffffff;\n  background-color: #3b82f6;\n`;\n\nexport const LoginError = styled.p`\n  ${tw`text-center`}\n  height:20px;\n  font-size: 12px;\n  font-weight: 600;\n  color: #cf1124;\n  margin-top: 2px;\n`;\n","import React, { Component } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport InputFieldWithLabel from \"../../common/components/InputField/InputField\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\n\nimport {\n  LoginFormContainer,\n  ShowShowPasswordContainer,\n  Checkbox,\n  ShouldShowPasswordLabel,\n  Form,\n  LoginButton,\n  LoginError,\n  NxtLogo,\n  NxtLogoContainer,\n} from \"./stylesComponents\";\nimport NxtWatchLogo from \"../../common/components/NXTWatchLogo/NXTWatchLogo\";\nimport { API_FETCHING } from \"@ib/api-constants\";\nimport LoaderComponent from \"../../common/components/Loader/Loader\";\n\ninterface LoginFormProps extends WithTranslation {\n  username: string;\n  password: string;\n  shouldShowPasswordStatus: () => void;\n  shouldShowPassword: boolean;\n  onChangeUserName: Function;\n  onChangePassword: Function;\n  onSubmitCredentials: () => void;\n  usernameError: string;\n  passwordError: string;\n  getUserLogInAPIError: string | null;\n  getUserLogInAPIStatus: number;\n}\n\nconst LoginForm = (props: LoginFormProps) => {\n  const { t } = props;\n  const {\n    username,\n    password,\n    usernameError,\n    passwordError,\n    shouldShowPasswordStatus,\n    shouldShowPassword,\n    onChangeUserName,\n    onChangePassword,\n    onSubmitCredentials,\n    getUserLogInAPIError,\n    getUserLogInAPIStatus,\n  } = props;\n\n  const getUserName = (value: string) => {\n    onChangeUserName(value);\n  };\n\n  const getPassword = (value: string) => {\n    onChangePassword(value);\n  };\n\n  const onSubmitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    onSubmitCredentials();\n  };\n\n  return (\n    <LoginFormContainer>\n      <NxtWatchLogo />\n      <Form onSubmit={onSubmitForm}>\n        <InputFieldWithLabel\n          errorMessage={usernameError}\n          fieldType={t(\"loginPage.textFieldType\")}\n          onChangeFunction={getUserName}\n          placeHolderText={t(\"loginPage.userNamePlaceholder\")}\n          labelText={t(\"loginPage.userNameLabel\")}\n        />\n        <InputFieldWithLabel\n          errorMessage={passwordError}\n          fieldType={\n            shouldShowPassword\n              ? t(\"loginPage.textFieldType\")\n              : t(\"loginPage.passwordFieldType\")\n          }\n          onChangeFunction={getPassword}\n          placeHolderText={t(\"loginPage.passwordPlaceholder\")}\n          labelText={t(\"loginPage.passwordLabel\")}\n        />\n        <ShowShowPasswordContainer>\n          <Checkbox\n            type={t(\"loginPage.checkboxFieldType\")}\n            onChange={shouldShowPasswordStatus}\n          />\n          <ShouldShowPasswordLabel>\n            {t(\"loginPage.showPasswordLabel\")}\n          </ShouldShowPasswordLabel>\n        </ShowShowPasswordContainer>\n        <LoginButton type={t(\"loginPage.loginButtonType\")}>\n          {getUserLogInAPIStatus === API_FETCHING ? (\n            <LoaderComponent />\n          ) : (\n            t(\"loginPage.loginButton\")\n          )}\n        </LoginButton>\n        <LoginError>{getUserLogInAPIError && getUserLogInAPIError}</LoginError>\n      </Form>\n    </LoginFormContainer>\n  );\n};\n\nexport default withTranslation()(LoginForm);\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\n\nexport const LoginScreenContainer = styled.div`\n  ${tw`h-screen w-screen flex flex-col items-center justify-center`}\n  @media (max-width: 768px) {\n    ${tw``}\n  }\n`;\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { observable, action } from \"mobx\";\nimport LoginForm from \"../../components/LoginForm\";\nimport AuthenticStore from \"../../stores/AuthenticationStore/AuthenticationStore\";\nimport { Redirect, RouteComponentProps } from \"react-router-dom\";\nimport { LoginScreenContainer } from \"./styledComponents\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { HOME_PAGE_PATH } from \"../../constants/RouteConstants\";\nimport { apiStatusConstants } from \"../../constants/APIConstants\";\nimport { getAccessToken } from \"../../utils/StorageUtils\";\n\ninterface PropsType extends RouteComponentProps {}\ninterface PropsType extends WithTranslation {}\ninterface InjectedProps extends PropsType {\n  authenticStore: AuthenticStore;\n}\n\n@inject(\"authenticStore\")\n@observer\nclass LoginPageRoute extends Component<PropsType> {\n  @observable username: string = \"\";\n  @observable password: string = \"\";\n  @observable usernameError: string = \"\";\n  @observable passwordError: string = \"\";\n\n  getInjectedProps = (): InjectedProps => this.props as InjectedProps;\n\n  getAuthStore = () => {\n    return this.getInjectedProps().authenticStore;\n  };\n\n  onChangeUserName = (name: string) => {\n    this.username = name;\n  };\n\n  onChangePassword = (password: string) => {\n    this.password = password;\n  };\n\n  onSubmitCredentials = () => {\n    const { t } = this.props;\n    const name = this.username;\n    const password = this.password;\n    if (name === \"\" && password === \"\") {\n      this.usernameError = t(\"loginPage.userNameErrorMessage\");\n      this.passwordError = t(\"loginPage.passwordErrorMessage\");\n    } else if (name === \"\") {\n      this.usernameError = t(\"loginPage.userNameErrorMessage\");\n    } else if (password === \"\") {\n      this.passwordError = t(\"loginPage.passwordErrorMessage\");\n    } else {\n      this.usernameError = \"\";\n      this.passwordError = \"\";\n      this.getAuthStore().getUserLogIn({\n        username: name,\n        password: password,\n      });\n    }\n  };\n\n  render() {\n    const {\n      shouldShowPasswordStatus,\n      shouldShowPassword,\n      getUserLogInAPIError,\n      getUserLogInAPIStatus,\n    } = this.getAuthStore();\n\n    return (\n      <>\n        {getAccessToken() ? (\n          <Redirect to={HOME_PAGE_PATH} />\n        ) : (\n          <LoginScreenContainer>\n            <LoginForm\n              username={this.username}\n              password={this.password}\n              shouldShowPasswordStatus={shouldShowPasswordStatus}\n              shouldShowPassword={shouldShowPassword}\n              usernameError={this.usernameError}\n              passwordError={this.passwordError}\n              onChangeUserName={this.onChangeUserName}\n              onChangePassword={this.onChangePassword}\n              onSubmitCredentials={this.onSubmitCredentials}\n              getUserLogInAPIError={getUserLogInAPIError}\n              getUserLogInAPIStatus={getUserLogInAPIStatus}\n            />\n          </LoginScreenContainer>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withTranslation()(LoginPageRoute);\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { LightTheme } from \"../../../constants/CommonConstants\";\nimport {\n  CardWrapper,\n  ImageContainer,\n  LinkEle,\n  VideoImage,\n} from \"../../../components/HomePageVideoCard/stylesComponents\";\n\nexport const Card = styled.li`\n  ${tw`flex mb-12`}\n`;\n\nexport const Link = styled(LinkEle)`\n  ${tw`flex`}\n  @media (max-width: 767px) {\n    ${tw`flex-wrap w-full`}\n  }\n`;\n\nexport const ThumbnailContainer = styled(ImageContainer)`\n  ${tw`mr-0 mb-2`}\n  @media(min-width: 768px) {\n    ${tw`mr-6 `}\n    height:200px;\n  }\n`;\n\nexport const Thumbnail = styled(VideoImage)`\n  ${tw`h-full w-full`}\n  @media(min-width: 768px) {\n    ${tw``}\n    width: 310px;\n  }\n`;\n","import React from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport {\n  ChannelName,\n  DetailsContainer,\n  DotElement,\n  PublishedTime,\n  VideoDetailsContainer,\n  VideoTitle,\n  Views,\n  ViewsAndPublishSection,\n} from \"../../../components/HomePageVideoCard/stylesComponents\";\nimport { VIDEO_DETAILS } from \"../../../constants/RouteConstants\";\nimport { Card, Link, Thumbnail, ThumbnailContainer } from \"./styledComplements\";\nimport HomePageEachVideoModel from \"../../../stores/models/HomePageModel\";\n\ninterface HomePageVideoCardPropTypes {\n  eachVideoDetails: HomePageEachVideoModel;\n  theme: string;\n}\n\nconst TrendingAndSavedVideosCard = (props: HomePageVideoCardPropTypes) => {\n  const { eachVideoDetails, theme } = props;\n  const { id, title, thumbnailUrl, channel, viewsCount, publishedAt } =\n    eachVideoDetails;\n\n  const published = publishedAt && formatDistanceToNow(new Date(publishedAt));\n\n  return (\n    <Card>\n      <Link to={`${VIDEO_DETAILS}${id}`}>\n        <ThumbnailContainer>\n          <Thumbnail src={thumbnailUrl} />\n        </ThumbnailContainer>\n        <VideoDetailsContainer>\n          <DetailsContainer>\n            <VideoTitle theme={theme}>{title}</VideoTitle>\n            <ChannelName theme={theme}>{channel.name}</ChannelName>\n            <ViewsAndPublishSection>\n              <Views theme={theme}>{viewsCount} Views</Views>\n              <DotElement theme={theme}></DotElement>\n              <PublishedTime theme={theme}>{published}</PublishedTime>\n            </ViewsAndPublishSection>\n          </DetailsContainer>\n        </VideoDetailsContainer>\n      </Link>\n    </Card>\n  );\n};\n\nexport default TrendingAndSavedVideosCard;\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\n\nexport const VideosListWrapper = styled.ul`\n  ${tw`py-8 px-10 list-none`}\n  @media (max-width: 767px) {\n    ${tw`p-2`}\n  }\n`;\n","import React from \"react\";\nimport TrendingAndSavedVideosCard from \"../../common/components/TrendingAndSavedVideosCard/TrendingAndSavedVideosCard\";\nimport HomePageEachVideoModel from \"../../stores/models/HomePageModel\";\nimport { VideosListWrapper } from \"./styledComponents\";\n\ninterface VideoCardsListPropTypes {\n  videosList: Array<HomePageEachVideoModel>;\n  theme: string;\n}\n\nconst VideoCardsList = (props: VideoCardsListPropTypes) => {\n  const { videosList, theme } = props;\n\n  return (\n    <VideosListWrapper>\n      {videosList.map((eachVideoDetails: HomePageEachVideoModel) => (\n        <TrendingAndSavedVideosCard\n          key={eachVideoDetails.id}\n          eachVideoDetails={eachVideoDetails}\n          theme={theme}\n        />\n      ))}\n    </VideosListWrapper>\n  );\n};\n\nexport default VideoCardsList;\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { HiFire } from \"react-icons/hi\";\n\nexport const SavedVideosLogo = styled(HiFire)`\n  ${tw``}\n  height:30px;\n  width: 30px;\n  color: #ff0000;\n`;\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\n\nexport const NoSavedVideosImage = styled.img`\n  ${tw``}\n  height: 310px;\n  @media (max-width: 768px) {\n    ${tw``}\n    height: 210px;\n  }\n`;\n","import React, { Component } from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport {\n  FailureViewWrapper,\n  FailureViewTitle,\n  FailureViewDescription,\n} from \"../../common/components/FailureView/styledComponents\";\nimport { NoSavedVideosImage } from \"./stylesComponents\";\n\ninterface NoSavedVideosPropTypes extends WithTranslation {\n  theme: string;\n}\n\nconst NoSavedVideos = (props: NoSavedVideosPropTypes) => {\n  const { t, theme } = props;\n  return (\n    <FailureViewWrapper>\n      <NoSavedVideosImage\n        alt={t(\"noSavedVideos.imageAltText\")}\n        src=\"https://assets.ccbp.in/frontend/react-js/nxt-watch-no-saved-videos-img.png\"\n      />\n      <FailureViewTitle theme={theme}>\n        {t(\"noSavedVideos.title\")}\n      </FailureViewTitle>\n      <FailureViewDescription theme={theme}>\n        {t(\"noSavedVideos.description\")}\n      </FailureViewDescription>\n    </FailureViewWrapper>\n  );\n};\n\nexport default withTranslation()(NoSavedVideos);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { HiFire } from \"react-icons/hi\";\nimport NavBarsWrapper from \"../../common/components/NavBarsWrapper/NavBarsWrapper\";\nimport CommonBanner from \"../../common/components/TrendingAndSavedVideosHeader/TrendingAndSavedVideosHeader\";\nimport VideoCardsList from \"../../components/VideoCardsList/VideoCardsList\";\nimport CommonContext from \"../../context\";\nimport { HomePageWrapper } from \"../HomePageRouter/styledComponents\";\nimport { SavedVideosLogo } from \"./styledComponents\";\nimport NoSavedVideos from \"../../components/NoSavedVideos/NosavedVideos\";\n\nclass SavedVideosRoute extends Component<WithTranslation> {\n  renderTheSavedVideosUI = () => {\n    const { t } = this.props;\n\n    return (\n      <CommonContext.Consumer>\n        {(value) => {\n          const { selectedTheme, savedVideosList } = value;\n          return (\n            <HomePageWrapper theme={selectedTheme}>\n              <CommonBanner\n                logoComponent={<SavedVideosLogo />}\n                theme={selectedTheme}\n                titleText={t(\"savedVideos\")}\n              />\n              {savedVideosList.length === 0 ? (\n                <NoSavedVideos theme={selectedTheme} />\n              ) : (\n                <VideoCardsList\n                  videosList={savedVideosList}\n                  theme={selectedTheme}\n                />\n              )}\n            </HomePageWrapper>\n          );\n        }}\n      </CommonContext.Consumer>\n    );\n  };\n\n  render() {\n    return <NavBarsWrapper component={this.renderTheSavedVideosUI()} />;\n  }\n}\n\nexport default withTranslation()(SavedVideosRoute);\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { HiFire } from \"react-icons/hi\";\n\nexport const TrendingVideosLogo = styled(HiFire)`\n  ${tw``}\n  height:30px;\n  width: 30px;\n  color: #ff0000;\n`;\n","import React, { Component } from \"react\";\nimport { API_FAILED, API_FETCHING, API_SUCCESS } from \"@ib/api-constants\";\nimport { inject, observer } from \"mobx-react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport NavBarsWrapper from \"../../common/components/NavBarsWrapper/NavBarsWrapper\";\nimport CommonBanner from \"../../common/components/TrendingAndSavedVideosHeader/TrendingAndSavedVideosHeader\";\nimport VideoCardsList from \"../../components/VideoCardsList/VideoCardsList\";\nimport CommonContext from \"../../context\";\nimport TrendingVideosStore from \"../../stores/TrendingVideosStore/TrendingVideosStore\";\nimport { HomePageWrapper } from \"../HomePageRouter/styledComponents\";\nimport { TrendingVideosLogo } from \"./styledComponents\";\nimport LoaderComponent from \"../../common/components/Loader/Loader\";\nimport { action } from \"mobx\";\nimport FailureView from \"../../common/components/FailureView/FailureView\";\nimport HomePageEachVideoModel from \"../../stores/models/HomePageModel\";\n\ninterface InjectedProps extends WithTranslation {\n  trendingVideosStore: TrendingVideosStore;\n}\n@inject(\"trendingVideosStore\")\n@observer\nclass TrendingVideosRoute extends Component<InjectedProps> {\n  getInjectedProps = (): InjectedProps => this.props as InjectedProps;\n\n  getTrendingPageStore = () => {\n    return this.getInjectedProps().trendingVideosStore;\n  };\n\n  componentDidMount() {\n    this.doNetworkCalls();\n  }\n\n  doNetworkCalls = () => {\n    this.getTrendingPageStore().getTrendingPageData();\n  };\n\n  onClickRetry = () => {\n    this.doNetworkCalls();\n  };\n\n  renderUiBasedOnApiStatus = (\n    theme: string,\n    getTrendingPageAPIStatus: number,\n    getTrendingPageVideosList: Array<HomePageEachVideoModel>\n  ) => {\n    switch (getTrendingPageAPIStatus) {\n      case API_SUCCESS:\n        return (\n          <VideoCardsList\n            videosList={getTrendingPageVideosList}\n            theme={theme}\n          />\n        );\n      case API_FAILED:\n        return <FailureView onClickRetry={this.onClickRetry} theme={theme} />;\n      case API_FETCHING:\n        return <LoaderComponent />;\n      default:\n        return null;\n    }\n  };\n\n  renderUI = () => {\n    const { t } = this.props;\n    const { getTrendingPageAPIStatus, getTrendingPageVideosList } =\n      this.getTrendingPageStore();\n    return (\n      <CommonContext.Consumer>\n        {(value) => {\n          const { selectedTheme } = value;\n          return (\n            <HomePageWrapper theme={selectedTheme}>\n              <CommonBanner\n                logoComponent={<TrendingVideosLogo />}\n                theme={selectedTheme}\n                titleText={t(\"trendingText\")}\n              />\n              {this.renderUiBasedOnApiStatus(\n                selectedTheme,\n                getTrendingPageAPIStatus,\n                getTrendingPageVideosList\n              )}\n            </HomePageWrapper>\n          );\n        }}\n      </CommonContext.Consumer>\n    );\n  };\n\n  render() {\n    return <NavBarsWrapper component={this.renderUI()} />;\n  }\n}\n\nexport default withTranslation()(TrendingVideosRoute);\n","import tw from \"twin.macro\";\nimport styled from \"styled-components\";\nimport { DarkTheme, LightTheme } from \"../../constants/CommonConstants\";\nimport { ChannelName, Views } from \"../HomePageVideoCard/stylesComponents\";\n\ninterface LikedButtonProps {\n  isLiked: boolean;\n}\ninterface DislikedButtonProps {\n  isDisliked: boolean;\n}\ninterface SavedButtonProps {\n  isSaved: boolean;\n}\n\nexport const VideoDetailsContainer = styled.div`\n  ${tw`w-full  p-6 overflow-y-scroll`}\n  background-color: ${(props) =>\n    props.theme === LightTheme ? \"#f9f9f9\" : \"#0f0f0f\"};\n  @media (max-width: 768px) {\n    ${tw`p-0 pt-4`}\n  }\n`;\n\nexport const VideoContainer = styled.div`\n  ${tw`w-full `}\n  height: 70vh;\n  @media (max-width: 768px) {\n    ${tw`w-full`}\n    height:250px;\n  }\n`;\n\nexport const VideoTitle = styled.p`\n  ${tw``}\n  color: ${(props) => (props.theme === DarkTheme ? \"#f8fafc\" : \"#1e293b\")};\n  font-family: \"Roboto\";\n  font-size: 16px;\n  line-height: 1.7;\n  @media (max-width: 768px) {\n    ${tw`px-4 mb-0`}\n  }\n`;\n\nexport const ViewsAndLikesDislikesContainer = styled.div`\n  ${tw`flex justify-between items-center`}\n  @media (max-width: 768px) {\n    ${tw`p-4 flex-col items-start`}\n  }\n`;\n\nexport const ViewAndPublishedTimeContainer = styled.div`\n  ${tw`flex`}\n`;\nexport const LikesAndDislikesContainer = styled.div`\n  ${tw`flex p-4`}\n  @media (max-width: 768px) {\n    ${tw`p-0 pt-4`}\n  }\n`;\n\nexport const LikeButton = styled.button<LikedButtonProps>`\n  ${tw`flex items-center justify-between border-none bg-transparent  cursor-pointer`}\n  width: 61px;\n  color: ${(props) =>\n    props.isLiked\n      ? \"#3b82f6\"\n      : props.theme === DarkTheme\n      ? \"#64748B\"\n      : \"#475569\"};\n  font-family: \"Roboto\";\n  font-size: 12px;\n  font-family: \"Roboto\";\n  font-size: 12px;\n  @media (max-width: 768px) {\n    ${tw`p-0 mr-4`}\n    width: 45px;\n  }\n`;\n\nexport const DislikeButton = styled.button<DislikedButtonProps>`\n  ${tw`flex items-center justify-between border-none bg-transparent  cursor-pointer`}\n  width: 75px;\n  color: ${(props) =>\n    props.isDisliked\n      ? \"#3b82f6\"\n      : props.theme === DarkTheme\n      ? \"#64748B\"\n      : \"#475569\"};\n  font-family: \"Roboto\";\n  font-size: 12px;\n  @media (max-width: 768px) {\n    ${tw`p-0 mr-4`}\n    width: 45px;\n  }\n`;\n\nexport const SavedVideoButton = styled.button<SavedButtonProps>`\n  ${tw`flex items-center  border-none bg-transparent  cursor-pointer`}\n  width: 70px;\n  color: ${(props) =>\n    props.isSaved\n      ? \"#3b82f6\"\n      : props.theme === DarkTheme\n      ? \"#64748B\"\n      : \"#475569\"};\n  font-family: \"Roboto\";\n  font-size: 12px;\n  font-family: \"Roboto\";\n  font-size: 12px;\n  @media (max-width: 768px) {\n    ${tw`p-0 mr-4`}\n    width: 45px;\n  }\n`;\n\nexport const HorizontalLine = styled.hr`\n  ${tw`my-6`}\n  border: ${(props) =>\n    props.theme === DarkTheme ? \"1px solid #475569\" : \"1px solid #e5e5e5\"};\n  @media (max-width: 768px) {\n    ${tw`mx-4 my-0`}\n  }\n`;\n\nexport const Subscribers = styled(Views)`\n  ${tw`mb-10`}\n`;\n\nexport const Description = styled.p`\n  ${tw`mt-6`}\n  color: ${(props) => (props.theme === DarkTheme ? \"#f8fafc\" : \"#1e293b\")};\n  font-family: \"Roboto\";\n  font-size: 12px;\n  @media (max-width: 768px) {\n    ${tw`w-full mt-2`}\n  }\n`;\n\nexport const ChannelNameAndDescriptionContainer = styled.div`\n  ${tw`ml-2`}\n`;\n\nexport const ChannelAndDescriptionContainer = styled.div`\n  ${tw`flex`}\n  @media (max-width: 768px) {\n    ${tw`p-4`}\n  }\n`;\n\nexport const ChannelTitle = styled(ChannelName)`\n  ${tw`my-1`}\n  color: ${(props) => (props.theme === DarkTheme ? \"#f8fafc\" : \"#1e293b\")};\n`;\n","import React, { Component } from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport ReactPlayer from \"react-player\";\nimport { VIDEO_DETAILS } from \"../../constants/RouteConstants\";\nimport VideoDetailsModel from \"../../stores/models/VideoDetailsModel/VideoDetailsModel\";\nimport CommonContext from \"../../context\";\nimport { MdPlaylistAdd } from \"react-icons/md\";\nimport { BiLike, BiDislike } from \"react-icons/bi\";\nimport {\n  Views,\n  DotElement,\n  PublishedTime,\n  ChannelLogo,\n  ChannelName,\n} from \"../HomePageVideoCard/stylesComponents\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { observable } from \"mobx\";\nimport {\n  VideoDetailsContainer,\n  VideoContainer,\n  VideoTitle,\n  ViewsAndLikesDislikesContainer,\n  ViewAndPublishedTimeContainer,\n  ChannelNameAndDescriptionContainer,\n  Description,\n  DislikeButton,\n  HorizontalLine,\n  LikeButton,\n  LikesAndDislikesContainer,\n  Subscribers,\n  SavedVideoButton,\n  ChannelAndDescriptionContainer,\n  ChannelTitle,\n} from \"./styledComponents\";\nimport { observer } from \"mobx-react\";\n\ninterface VideoDetailsPropTypes extends WithTranslation {\n  videoDetails: VideoDetailsModel;\n}\n\n@observer\nclass VideoDetailsPage extends Component<VideoDetailsPropTypes> {\n  @observable isLiked: boolean = false;\n  @observable isDisliked: boolean = false;\n  @observable isSaved: boolean = false;\n\n  render() {\n    const { t } = this.props;\n    const { videoDetails } = this.props;\n    const {\n      id,\n      title,\n      channel,\n      videoUrl,\n      viewsCount,\n      publishedAt,\n      description,\n      isLiked,\n      isDisliked,\n      onChangeLikedStatus,\n      onChangeDislikedStatus,\n    } = videoDetails;\n\n    const published = formatDistanceToNow(new Date(publishedAt));\n\n    return (\n      <CommonContext.Consumer>\n        {(value) => {\n          const { selectedTheme, onAddVideo, savedVideosList } = value;\n          const isSavedVideo = () => {\n            return savedVideosList.some(\n              (eachVideo: VideoDetailsModel) => eachVideo.id === id\n            );\n          };\n          const onChangeSaveVideoStatus = () => {\n            onAddVideo(videoDetails);\n          };\n          return (\n            <VideoDetailsContainer theme={selectedTheme}>\n              <VideoContainer>\n                <ReactPlayer\n                  height=\"100%\"\n                  width=\"100%\"\n                  url={videoUrl}\n                  controls\n                />\n              </VideoContainer>\n              <VideoTitle theme={selectedTheme}>{title}</VideoTitle>\n              <ViewsAndLikesDislikesContainer>\n                <ViewAndPublishedTimeContainer>\n                  <Views theme={selectedTheme}>\n                    {viewsCount} {t(\"videoDetailsPage.views\")}\n                  </Views>\n                  <DotElement theme={selectedTheme}></DotElement>\n                  <PublishedTime theme={selectedTheme}>\n                    {published} {t(\"videoDetailsPage.ago\")}\n                  </PublishedTime>\n                </ViewAndPublishedTimeContainer>\n                <LikesAndDislikesContainer>\n                  <LikeButton\n                    theme={selectedTheme}\n                    onClick={onChangeLikedStatus}\n                    isLiked={isLiked}\n                  >\n                    <BiLike size={20} />\n                    {t(\"videoDetailsPage.like\")}\n                  </LikeButton>\n                  <DislikeButton\n                    theme={selectedTheme}\n                    onClick={onChangeDislikedStatus}\n                    isDisliked={isDisliked}\n                  >\n                    <BiDislike size={20} />\n                    {t(\"videoDetailsPage.dislike\")}\n                  </DislikeButton>\n                  <SavedVideoButton\n                    theme={selectedTheme}\n                    onClick={onChangeSaveVideoStatus}\n                    isSaved={isSavedVideo()}\n                  >\n                    <MdPlaylistAdd size={20} />\n                    {isSavedVideo()\n                      ? t(\"videoDetailsPage.unSave\")\n                      : t(\"videoDetailsPage.save\")}\n                  </SavedVideoButton>\n                </LikesAndDislikesContainer>\n              </ViewsAndLikesDislikesContainer>\n              <HorizontalLine />\n              <ChannelAndDescriptionContainer>\n                <ChannelLogo src={channel.profileImageUrl} />\n                <ChannelNameAndDescriptionContainer>\n                  <ChannelTitle theme={selectedTheme}>\n                    {channel.name}\n                  </ChannelTitle>\n                  <Subscribers>\n                    {channel.subscribersCount}{\" \"}\n                    {t(\"videoDetailsPage.subscribers\")}\n                  </Subscribers>\n                  <Description theme={selectedTheme}>{description}</Description>\n                </ChannelNameAndDescriptionContainer>\n              </ChannelAndDescriptionContainer>\n            </VideoDetailsContainer>\n          );\n        }}\n      </CommonContext.Consumer>\n    );\n  }\n}\n\nexport default withTranslation()(VideoDetailsPage);\n","import { API_FAILED, API_FETCHING, API_SUCCESS } from \"@ib/api-constants\";\nimport { inject, observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport NavBarsWrapper from \"../../common/components/NavBarsWrapper/NavBarsWrapper\";\nimport VideoItemDetailsStore from \"../../stores/VideoItemDetailsStore/VideoItemDetailsStore\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport VideoDetailsPage from \"../../components/VideoDetailsPage/VideoDetailsPage\";\nimport LoaderComponent from \"../../common/components/Loader/Loader\";\nimport FailureView from \"../../common/components/FailureView/FailureView\";\n\ninterface RouteParams {\n  id: string;\n}\n\ninterface PropTypes extends RouteComponentProps<RouteParams> {}\n\ninterface PropTypes extends WithTranslation {}\n\ninterface InjectedProps extends PropTypes {}\n\ninterface PropTypes {\n  videoItemDetailsStore: VideoItemDetailsStore;\n}\n@inject(\"videoItemDetailsStore\")\n@observer\nclass VideoItemDetailsRoute extends Component<PropTypes> {\n  getInjectedProps = (): InjectedProps => this.props as InjectedProps;\n\n  getVideoDetailsStore = () => {\n    return this.getInjectedProps().videoItemDetailsStore;\n  };\n\n  componentDidMount() {\n    this.doNetworkCalls();\n  }\n  doNetworkCalls = () => {\n    const { match } = this.props;\n    const { params } = match;\n    const { id } = params;\n    console.log(id, \"id\");\n    this.getVideoDetailsStore().getVideoDetailsPageData(id);\n  };\n\n  onClickRetry = () => {\n    this.doNetworkCalls();\n  };\n\n  renderUiBasedOnApiStatus = () => {\n    const { getVideoDetailsAPIStatus, getVideoDetails } =\n      this.getVideoDetailsStore();\n\n    console.log(getVideoDetails);\n    switch (getVideoDetailsAPIStatus) {\n      case API_SUCCESS:\n        return <VideoDetailsPage videoDetails={getVideoDetails} />;\n      case API_FAILED:\n        return <FailureView onClickRetry={this.onClickRetry} />;\n      case API_FETCHING:\n        return <LoaderComponent />;\n      default:\n        return null;\n    }\n  };\n\n  render() {\n    return <NavBarsWrapper component={this.renderUiBasedOnApiStatus()} />;\n  }\n}\n\nexport default withTranslation()(VideoItemDetailsRoute);\n","import { Component } from \"react\";\nimport { RouteProps } from \"react-router\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { LOGIN_IN_PATH } from \"../../../constants/RouteConstants\";\nimport { getAccessToken } from \"../../../utils/StorageUtils\";\n// import Cookie from \"js-cookie\";\n\nconst ProtectedRoute = (props: RouteProps) => {\n  const { component, ...others } = props;\n\n  return getAccessToken() ? (\n    <Route component={component} {...others} />\n  ) : (\n    <Redirect to={LOGIN_IN_PATH} />\n  );\n};\n\n// const ProtectedRoute = (props: RouteProps) => {\n//   const token = Cookie.get(\"jwt_token\");\n//   return token !== undefined ? (\n//     <Route {...props} />\n//   ) : (\n//     <Redirect to={LOGIN_IN_PATH} />\n//   );\n// };\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {\n  GAMING_PAGE_PATH,\n  HOME_PAGE_PATH,\n  LOGIN_IN_PATH,\n  SAVED_VIDEOS_PAGE,\n  TRENDING_VIDEOS_PAGE,\n  VideoDetailsId,\n  VIDEO_DETAILS,\n} from \"../../constants/RouteConstants\";\nimport GamingRoute from \"../../routes/GamingRoute/GamingRoute\";\nimport HomePageRouter from \"../../routes/HomePageRouter/HomePageRouter\";\nimport LoginPageRoute from \"../../routes/LoginPageRouter/LoginPageRouter\";\nimport SavedVideosRoute from \"../../routes/SavedVideosRoute/SavedVideosRoute\";\nimport TrendingVideosRoute from \"../../routes/TrendingVideosRoute/TrendingVideosRoute\";\nimport VideoItemDetailsRoute from \"../../routes/VideoItemDetailsRoute/VideoItemDetailsRoute\";\nimport ProtectedRoute from \"./ProtectedRoute\";\n\nconst CommonRoute = () => (\n  <Router>\n    <Switch>\n      <Route\n        exact\n        path={LOGIN_IN_PATH}\n        key={LOGIN_IN_PATH}\n        component={LoginPageRoute}\n      />\n      <ProtectedRoute\n        exact\n        path={HOME_PAGE_PATH}\n        key={HOME_PAGE_PATH}\n        component={HomePageRouter}\n      />\n      <ProtectedRoute\n        exact\n        path={TRENDING_VIDEOS_PAGE}\n        key={TRENDING_VIDEOS_PAGE}\n        component={TrendingVideosRoute}\n      />\n      <ProtectedRoute\n        exact\n        path={GAMING_PAGE_PATH}\n        key={GAMING_PAGE_PATH}\n        component={GamingRoute}\n      />\n      <ProtectedRoute\n        exact\n        path={SAVED_VIDEOS_PAGE}\n        key={SAVED_VIDEOS_PAGE}\n        component={SavedVideosRoute}\n      />\n      <ProtectedRoute\n        exact\n        path={`${VIDEO_DETAILS}:id`}\n        key={`${VIDEO_DETAILS}:id`}\n        component={VideoItemDetailsRoute}\n      />\n    </Switch>\n  </Router>\n);\n\nexport default CommonRoute;\n","import { create } from \"apisauce\";\n\nclass AuthenticService {\n  api;\n  constructor() {\n    this.api = create({\n      baseURL: \"https://apis.ccbp.in\",\n    });\n  }\n\n  LogInAPI = async (userDetails: Object) => {\n    const url = \"https://apis.ccbp.in/login\";\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(userDetails),\n    };\n    const response = await fetch(url, options);\n\n    const data = await response.json();\n    const loginResponse = {\n      details: data,\n      status: response.ok,\n    };\n\n    return loginResponse;\n  };\n}\n\nexport default AuthenticService;\n","import { observable, action } from \"mobx\";\nimport { bindPromiseWithOnSuccess } from \"@ib/mobx-promise\";\nimport { setAccessToken } from \"../../utils/StorageUtils\";\nimport AuthenticService from \"../../services/AuthenticServices\";\nimport { apiStatusConstants } from \"../../constants/APIConstants\";\nimport { APIStatus } from \"@ib/api-constants\";\nimport { FetchedLoginDetailsTypes } from \"../types\";\n\nclass AuthenticStore {\n  @observable getUserLogInAPIStatus!: APIStatus;\n  @observable getUserLogInAPIError!: string;\n  @observable shouldShowPassword: boolean;\n  @observable authAPIService: AuthenticService;\n\n  constructor(authService: AuthenticService) {\n    this.shouldShowPassword = false;\n    this.authAPIService = authService;\n  }\n\n  @action.bound\n  setUserLogInAPIResponse(response: FetchedLoginDetailsTypes | null) {\n    if (response?.status) {\n      setAccessToken(response.details.jwt_token);\n    }\n  }\n\n  @action.bound\n  setGetUserLogInAPIStatus(apiStatus: number) {\n    this.getUserLogInAPIStatus = apiStatus;\n  }\n\n  @action.bound\n  setGetUserLogInAPIError(error: string) {\n    this.getUserLogInAPIError = error;\n  }\n\n  getUserLogIn(data: Object) {\n    const AuthPromise = this.authAPIService.LogInAPI(data);\n    return bindPromiseWithOnSuccess(AuthPromise)\n      .to(this.setGetUserLogInAPIStatus, (response) => {\n        this.setUserLogInAPIResponse(response);\n      })\n      .catch((error) => {\n        this.setGetUserLogInAPIError(error);\n      });\n  }\n\n  @action.bound\n  shouldShowPasswordStatus = () => {\n    this.shouldShowPassword = !this.shouldShowPassword;\n  };\n}\n\nexport default AuthenticStore;\n","export const apiMethods = {\n  post: \"POST\",\n  get: \"GET\",\n  delete: \"DELETE\",\n  put: \"PUT\",\n};\n\nconst INVALID_URL_TOKEN = \"INVALID_URL_TOKEN\";\nconst INVALID_TOKEN = \"INVALID_TOKEN\";\nconst INVALID_USER = \"INVALID_USER\";\nconst NOT_AUTHORIZED_EXCEPTION = \"NotAuthorizedException\";\nconst USER_NOT_FOUND_EXCEPTION = \"UserNotFoundException\";\nconst INVALID_SESSION_TOKEN = \"INVALID_SESSION_TOKEN\";\nconst REQUEST_TIMED_OUT = \"Endpoint request timed out\";\nconst INTERNAL_SERVER_ERROR_CODE = 500;\nconst NO_INTERNET_ERROR_CODE = 503;\nconst BAD_REQUEST_ERROR_CODE = 400;\nconst UNAUTHORIZED_ERROR_CODE = 401;\nconst ACCESS_FORBIDDEN_ERROR_CODE = 403;\nconst NOT_FOUND_ERROR_CODE = 404;\n\nexport const resStatuses = {\n  invalidURLToken: INVALID_URL_TOKEN,\n  invalidToken: INVALID_TOKEN,\n  invalidUser: INVALID_USER,\n  notAuthorizedException: NOT_AUTHORIZED_EXCEPTION,\n  userNotFoundException: USER_NOT_FOUND_EXCEPTION,\n  invalidSessionToken: INVALID_SESSION_TOKEN,\n  requestTimedOut: REQUEST_TIMED_OUT,\n};\n\nexport const statusCodes = {\n  internalServerErrorCode: INTERNAL_SERVER_ERROR_CODE,\n  noInternetErrorCode: NO_INTERNET_ERROR_CODE,\n  badRequestErrorCode: BAD_REQUEST_ERROR_CODE,\n  unAuthorizedErrorCode: UNAUTHORIZED_ERROR_CODE,\n  accessForbiddenErrorCode: ACCESS_FORBIDDEN_ERROR_CODE,\n  notFoundErrorCode: NOT_FOUND_ERROR_CODE,\n};\n\nexport const apiErrorProblems = {\n  networkError: \"NETWORK_ERROR\",\n  timeoutError: \"TIMEOUT_ERROR\",\n};\n\nexport const apiStatusConstants = {\n  success: \"SUCCESS\",\n  failure: \"FAILURE\",\n  loading: \"LOADING\",\n  initial: \"INITIAL\",\n};\n","import { create } from \"apisauce\";\nimport { apiMethods } from \"../../constants/APIConstants\";\nimport { getAccessToken } from \"../../utils/StorageUtils\";\n\nclass HomePageServices {\n  api;\n  constructor() {\n    this.api = create({\n      baseURL: \"https://apis.ccbp.in/videos\",\n    });\n  }\n\n  getHomePageData = async (search: string) => {\n    const JwtToken = getAccessToken();\n    const url = `https://apis.ccbp.in/videos/all?search=${search}`;\n    const options = {\n      headers: {\n        Authorization: `Bearer ${JwtToken}`,\n      },\n      method: apiMethods.get,\n    };\n    const response = await fetch(url, options);\n\n    const data = await response.json();\n    const fetchedData = {\n      details: data,\n      status: response.ok,\n    };\n\n    return fetchedData;\n  };\n}\n\nexport default HomePageServices;\n","import { observable } from \"mobx\";\nimport { EachVideoObject, HomePageTypes } from \"../../types\";\n\nclass HomePageEachVideoModel {\n  id: string;\n  title: string;\n  thumbnailUrl: string;\n  channel: { name: string | undefined; profileImageUrl: string | undefined };\n  viewsCount: string;\n  publishedAt: string | undefined;\n\n  constructor(object: EachVideoObject) {\n    this.id = object.id;\n    this.title = object.title;\n    this.thumbnailUrl = object.thumbnail_url;\n    this.channel = {\n      name: object.channel?.name,\n      profileImageUrl: object.channel?.profile_image_url,\n    };\n    this.viewsCount = object.view_count;\n    this.publishedAt = object.published_at;\n  }\n}\nexport default HomePageEachVideoModel;\n","import { observable, action } from \"mobx\";\nimport { bindPromiseWithOnSuccess } from \"@ib/mobx-promise\";\nimport HomePageServices from \"../../services/HomePageServices\";\nimport HomePageEachVideoModel from \"../models/HomePageModel\";\nimport { EachVideoObject, FetchedDataTypes } from \"../types\";\n\nimport { API_INITIAL, APIStatus } from \"@ib/api-constants\";\n\nclass HomePageStore {\n  @observable getHomePageAPIStatus!: APIStatus;\n  @observable getHomePageAPIError!: string | null;\n  @observable homePageApiService: HomePageServices;\n  @observable getHomePageVideosList: Array<HomePageEachVideoModel>;\n  @observable totalVideoCount: number;\n  @observable shouldShowBannerCard: boolean;\n\n  constructor(homePageService: HomePageServices) {\n    this.homePageApiService = homePageService;\n    this.getHomePageAPIStatus = API_INITIAL;\n    this.getHomePageVideosList = [];\n    this.totalVideoCount = 0;\n    this.shouldShowBannerCard = true;\n  }\n\n  @action.bound\n  setHomePageAPIResponse(response: FetchedDataTypes | null) {\n    if (response?.status) {\n      this.totalVideoCount = response.details.total;\n      this.getHomePageVideosList = response.details.videos.map(\n        (eachVideo: EachVideoObject) => {\n          return new HomePageEachVideoModel(eachVideo);\n        }\n      );\n    }\n  }\n\n  @action.bound\n  setGetHomePageAPIStatus(apiStatus: number) {\n    this.getHomePageAPIStatus = apiStatus;\n  }\n\n  @action.bound\n  setHomePageAPIError(error: string) {\n    this.getHomePageAPIError = error;\n  }\n\n  @action.bound\n  onChangeBannerCardStatus = () => {\n    this.shouldShowBannerCard = !this.shouldShowBannerCard;\n  };\n\n  @action.bound\n  getHomePageData(searchString: string) {\n    const data = this.homePageApiService.getHomePageData(searchString);\n    return bindPromiseWithOnSuccess(data)\n      .to(this.setGetHomePageAPIStatus, (response) => {\n        this.setHomePageAPIResponse(response);\n      })\n      .catch((error) => {\n        this.setHomePageAPIError(error);\n      });\n  }\n}\n\nexport default HomePageStore;\n","import { create } from \"apisauce\";\nimport { apiMethods } from \"../../constants/APIConstants\";\nimport { getAccessToken } from \"../../utils/StorageUtils\";\n\nclass VideoDetailsServices {\n  api;\n  constructor() {\n    this.api = create({\n      baseURL: \"https://apis.ccbp.in/videos\",\n    });\n  }\n\n  getSelectedVideoDetails = async (id: string) => {\n    const JwtToken = getAccessToken();\n    const url = `https://apis.ccbp.in/videos/${id}`;\n    const options = {\n      headers: {\n        Authorization: `Bearer ${JwtToken}`,\n      },\n      method: apiMethods.get,\n    };\n    const response = await fetch(url, options);\n\n    const data = await response.json();\n    const fetchedData = {\n      details: data,\n      status: response.ok,\n    };\n\n    return fetchedData;\n  };\n}\n\nexport default VideoDetailsServices;\n","import { observable } from \"mobx\";\nimport { VideoDetailsObjectTypes } from \"../../types\";\n\nclass VideoDetailsModel {\n  id: string;\n  title: string;\n  thumbnailUrl: string;\n  videoUrl: string;\n  channel: { name: string; profileImageUrl: string; subscribersCount: string };\n  viewsCount: string;\n  publishedAt: string;\n  description: string;\n  @observable isLiked: boolean;\n  @observable isDisliked: boolean;\n\n  constructor(response: VideoDetailsObjectTypes) {\n    this.id = response.video_details.id;\n    this.title = response.video_details.title;\n    this.thumbnailUrl = response.video_details.thumbnail_url;\n    this.videoUrl = response.video_details.video_url;\n    this.channel = {\n      name: response.video_details.channel.name,\n      profileImageUrl: response.video_details.channel.profile_image_url,\n      subscribersCount: response.video_details.channel.subscriber_count,\n    };\n    this.viewsCount = response.video_details.view_count;\n    this.publishedAt = response.video_details.published_at;\n    this.description = response.video_details.description;\n    this.isLiked = false;\n    this.isDisliked = false;\n  }\n\n  onChangeLikedStatus = () => {\n    this.isLiked = !this.isLiked;\n    if (this.isLiked) {\n      this.isDisliked = false;\n    }\n  };\n\n  onChangeDislikedStatus = () => {\n    this.isDisliked = !this.isDisliked;\n    if (this.isDisliked) {\n      this.isLiked = false;\n    }\n  };\n}\nexport default VideoDetailsModel;\n","import { observable, action } from \"mobx\";\nimport { bindPromiseWithOnSuccess } from \"@ib/mobx-promise\";\nimport { APIStatus } from \"@ib/api-constants\";\nimport VideoDetailsServices from \"../../services/VideoDetailsServices/VideoDetailsServices\";\nimport VideoDetailsModel from \"../models/VideoDetailsModel/VideoDetailsModel\";\nimport { FetchedDataVideoDetailsTypes } from \"../types\";\n\nclass VideoItemDetailsStore {\n  @observable getVideoDetailsAPIStatus!: APIStatus;\n  @observable getVideoDetailsAPIError!: string;\n  @observable videoDetailsApiService: VideoDetailsServices;\n  @observable getVideoDetails!: VideoDetailsModel;\n\n  constructor(videoDetailsService: VideoDetailsServices) {\n    this.videoDetailsApiService = videoDetailsService;\n  }\n\n  @action.bound\n  setVideoDetailsAPIResponse(response: FetchedDataVideoDetailsTypes | null) {\n    if (response?.status) {\n      this.getVideoDetails = new VideoDetailsModel(response.details);\n    }\n  }\n\n  @action.bound\n  setVideoDetailsAPIStatus(apiStatus: number) {\n    this.getVideoDetailsAPIStatus = apiStatus;\n  }\n\n  @action.bound\n  setVideoDetailsAPIError(error: string) {\n    this.getVideoDetailsAPIError = error;\n  }\n\n  getVideoDetailsPageData(id: string) {\n    const data = this.videoDetailsApiService.getSelectedVideoDetails(id);\n    return bindPromiseWithOnSuccess(data)\n      .to(this.setVideoDetailsAPIStatus, (response) => {\n        this.setVideoDetailsAPIResponse(response);\n      })\n      .catch((error) => {\n        this.setVideoDetailsAPIError(error);\n      });\n  }\n}\n\nexport default VideoItemDetailsStore;\n","import { observable, action } from \"mobx\";\nimport { bindPromiseWithOnSuccess } from \"@ib/mobx-promise\";\nimport HomePageEachVideoModel from \"../models/HomePageModel\";\nimport { EachVideoObject, FetchedDataTypes } from \"../types\";\n\nimport { APIStatus } from \"@ib/api-constants\";\nimport TrendingVideosService from \"../../services/TrendingVideosService/TrendingVideosService\";\n\nclass TrendingVideosStore {\n  @observable getTrendingPageAPIStatus!: APIStatus;\n  @observable getTrendingPageAPIError!: string | null;\n  @observable trendingPageApiService: TrendingVideosService;\n  @observable getTrendingPageVideosList: Array<HomePageEachVideoModel>;\n  @observable totalVideoCount: number;\n\n  constructor(trendingPageService: TrendingVideosService) {\n    this.trendingPageApiService = trendingPageService;\n    this.getTrendingPageVideosList = [];\n    this.totalVideoCount = 0;\n  }\n\n  @action.bound\n  setTrendingPageAPIResponse(response: FetchedDataTypes | null) {\n    if (response?.status) {\n      this.totalVideoCount = response.details.total;\n      this.getTrendingPageVideosList = response.details.videos.map(\n        (eachVideo: EachVideoObject) => {\n          return new HomePageEachVideoModel(eachVideo);\n        }\n      );\n    }\n  }\n\n  @action.bound\n  setTrendingPageAPIStatus(apiStatus: number) {\n    this.getTrendingPageAPIStatus = apiStatus;\n  }\n\n  @action.bound\n  setTrendingPageAPIError(error: string) {\n    this.getTrendingPageAPIError = error;\n  }\n\n  getTrendingPageData() {\n    const data = this.trendingPageApiService.getTrendingPageData();\n    return bindPromiseWithOnSuccess(data)\n      .to(this.setTrendingPageAPIStatus, (response) => {\n        this.setTrendingPageAPIResponse(response);\n      })\n      .catch((error) => {\n        this.setTrendingPageAPIError(error);\n      });\n  }\n}\n\nexport default TrendingVideosStore;\n","import { create } from \"apisauce\";\nimport { apiMethods } from \"../../constants/APIConstants\";\nimport { getAccessToken } from \"../../utils/StorageUtils\";\n\nclass TrendingVideosService {\n  api;\n  constructor() {\n    this.api = create({\n      baseURL: \"https://apis.ccbp.in/videos\",\n    });\n  }\n\n  getTrendingPageData = async () => {\n    const JwtToken = getAccessToken();\n    const url = `https://apis.ccbp.in/videos/trending`;\n    const options = {\n      headers: {\n        Authorization: `Bearer ${JwtToken}`,\n      },\n      method: apiMethods.get,\n    };\n    const response = await fetch(url, options);\n\n    const data = await response.json();\n    const fetchedData = {\n      details: data,\n      status: response.ok,\n    };\n\n    return fetchedData;\n  };\n}\n\nexport default TrendingVideosService;\n","import { observable, action } from \"mobx\";\nimport { bindPromiseWithOnSuccess } from \"@ib/mobx-promise\";\nimport HomePageEachVideoModel from \"../models/HomePageModel\";\nimport { EachVideoObject, FetchedDataTypes } from \"../types\";\n\nimport { APIStatus } from \"@ib/api-constants\";\nimport GamingVideosService from \"../../services/GamingVideosService/GamingVideosService\";\n\nclass GameVideosStore {\n  @observable getGamePageAPIStatus!: APIStatus;\n  @observable getGamePageAPIError!: string | null;\n  @observable gamePageApiService: GamingVideosService;\n  @observable getGamePageVideosList: Array<HomePageEachVideoModel>;\n  @observable totalVideoCount: number;\n\n  constructor(gamePageApiService: GamingVideosService) {\n    this.gamePageApiService = gamePageApiService;\n    this.getGamePageVideosList = [];\n    this.totalVideoCount = 0;\n  }\n\n  @action.bound\n  setGamePageAPIResponse(response: FetchedDataTypes | null) {\n    if (response?.status) {\n      this.totalVideoCount = response.details.total;\n      this.getGamePageVideosList = response.details.videos.map(\n        (eachVideo: EachVideoObject) => {\n          return new HomePageEachVideoModel(eachVideo);\n        }\n      );\n    }\n  }\n\n  @action.bound\n  setGamePageAPIStatus(apiStatus: number) {\n    this.getGamePageAPIStatus = apiStatus;\n  }\n\n  @action.bound\n  setGamePageAPIError(error: string) {\n    this.getGamePageAPIError = error;\n  }\n\n  getGamePageData() {\n    const data = this.gamePageApiService.getGamePageData();\n    return bindPromiseWithOnSuccess(data)\n      .to(this.setGamePageAPIStatus, (response) => {\n        this.setGamePageAPIResponse(response);\n      })\n      .catch((error) => {\n        this.setGamePageAPIError(error);\n      });\n  }\n}\n\nexport default GameVideosStore;\n","import { create } from \"apisauce\";\nimport { apiMethods } from \"../../constants/APIConstants\";\nimport { getAccessToken } from \"../../utils/StorageUtils\";\n\nclass GamingVideosService {\n  api;\n  constructor() {\n    this.api = create({\n      baseURL: \"https://apis.ccbp.in/videos\",\n    });\n  }\n\n  getGamePageData = async () => {\n    const JwtToken = getAccessToken();\n    const url = `https://apis.ccbp.in/videos/gaming`;\n    const options = {\n      headers: {\n        Authorization: `Bearer ${JwtToken}`,\n      },\n      method: apiMethods.get,\n    };\n    const response = await fetch(url, options);\n\n    const data = await response.json();\n    const fetchedData = {\n      details: data,\n      status: response.ok,\n    };\n\n    return fetchedData;\n  };\n}\n\nexport default GamingVideosService;\n","import AuthenticService from \"../services/AuthenticServices\";\nimport AuthenticStore from \"./AuthenticationStore/AuthenticationStore\";\nimport HomePageServices from \"../services/HomePageServices\";\nimport HomePageStore from \"./HomePageStore/HomePageStore\";\nimport VideoDetailsServices from \"../services/VideoDetailsServices/VideoDetailsServices\";\nimport VideoItemDetailsStore from \"./VideoItemDetailsStore/VideoItemDetailsStore\";\nimport TrendingVideosStore from \"./TrendingVideosStore/TrendingVideosStore\";\nimport TrendingVideosService from \"../services/TrendingVideosService/TrendingVideosService\";\nimport GameVideosStore from \"./GameVideosStore/GameVideosStore\";\nimport GamingVideosService from \"../services/GamingVideosService/GamingVideosService\";\n\nconst authenticService = new AuthenticService();\nconst authenticStore = new AuthenticStore(authenticService);\nconst homePageService = new HomePageServices();\nconst homePageStore = new HomePageStore(homePageService);\nconst videoDetailsServices = new VideoDetailsServices();\nconst videoItemDetailsStore = new VideoItemDetailsStore(videoDetailsServices);\nconst trendingVideosService = new TrendingVideosService();\nconst trendingVideosStore = new TrendingVideosStore(trendingVideosService);\nconst gameVideosService = new GamingVideosService();\nconst gameVideosStore = new GameVideosStore(gameVideosService);\n\nexport default {\n  authenticService,\n  authenticStore,\n  homePageService,\n  homePageStore,\n  videoItemDetailsStore,\n  trendingVideosStore,\n  gameVideosStore,\n};\n","import React, { Component } from \"react\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18n from \"./i18n\";\nimport CommonContext from \"./context\";\nimport \"./App.css\";\nimport CommonRoute from \"./common/routes/CommonRoute\";\nimport stores from \"./stores\";\nimport { observer, Provider } from \"mobx-react\";\nimport { observable } from \"mobx\";\nimport { LightTheme, DarkTheme } from \"./constants/CommonConstants\";\nimport VideoDetailsModel from \"./stores/models/VideoDetailsModel/VideoDetailsModel\";\n\n@observer\nclass App extends Component {\n  @observable selectedTheme: string = LightTheme;\n  @observable savedVideosList: any = [];\n\n  onChangeTheme = () => {\n    this.selectedTheme =\n      this.selectedTheme === LightTheme ? DarkTheme : LightTheme;\n  };\n  onAddVideo = (videoDetails: VideoDetailsModel) => {\n    const { savedVideosList } = this;\n    if (\n      savedVideosList.some(\n        (eachVideo: VideoDetailsModel) => eachVideo.id === videoDetails.id\n      )\n    ) {\n      this.onRemoveVideo(videoDetails);\n    } else this.savedVideosList = [...savedVideosList, videoDetails];\n  };\n\n  onRemoveVideo = (videoDetails: VideoDetailsModel) => {\n    const { savedVideosList } = this;\n    const videoObjects = savedVideosList.filter(\n      (eachVideoItem: VideoDetailsModel) => eachVideoItem.id !== videoDetails.id\n    );\n\n    this.savedVideosList = [...videoObjects];\n  };\n\n  render() {\n    const { selectedTheme, savedVideosList } = this;\n\n    return (\n      <Provider {...stores}>\n        <CommonContext.Provider\n          value={{\n            selectedTheme,\n            onChangeTheme: this.onChangeTheme,\n            savedVideosList,\n            onAddVideo: this.onAddVideo,\n            onRemoveVideo: this.onRemoveVideo,\n          }}\n        >\n          <I18nextProvider i18n={i18n}>\n            <CommonRoute />\n          </I18nextProvider>\n        </CommonContext.Provider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={<div className=\"suspense-loading-view\">Loading</div>}>\n      <App />\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}